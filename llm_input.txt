Directory Structure:
elk-stack-repo/
│   ├── elasticsearch-git.yaml
│   ├── traefik-app.yaml
│   ├── elk-ingress-routes.yaml
│   ├── kibana-git.yaml
│   ├── logstash-git.yaml
│   ├── traefik-git.yaml
argocd/
│   ├── setup/
│   ├── │   ├── argocd-installation.yaml
│   ├── applications/
│   ├── │   ├── logstash.yaml
│   ├── │   ├── metallb.yaml
│   ├── │   ├── elasticsearch.yaml
│   ├── │   ├── kibana.yaml
│   ├── │   ├── traefik.yaml
│   ├── │   ├── metallb-config.yaml
.git/
│   ├── logs/
│   │   ├── refs/
│   │   │   ├── heads/
│   │   │   ├── remotes/
│   │   │   │   ├── origin/
│   ├── hooks/
│   ├── info/
│   ├── objects/
│   │   ├── 7a/
│   │   ├── e1/
│   │   ├── ab/
│   │   ├── 25/
│   │   ├── 3c/
│   │   ├── 32/
│   │   ├── pack/
│   │   ├── b3/
│   │   ├── ca/
│   │   ├── fe/
│   │   ├── 88/
│   │   ├── 79/
│   │   ├── 20/
│   │   ├── 8d/
│   │   ├── 05/
│   │   ├── 0a/
│   │   ├── e2/
│   │   ├── 0e/
│   │   ├── 24/
│   │   ├── 6e/
│   │   ├── 8c/
│   │   ├── ef/
│   │   ├── 97/
│   │   ├── 3b/
│   │   ├── d7/
│   │   ├── 03/
│   │   ├── b8/
│   │   ├── 11/
│   │   ├── f8/
│   │   ├── 42/
│   │   ├── 6c/
│   │   ├── 10/
│   │   ├── 39/
│   │   ├── 38/
│   │   ├── 84/
│   │   ├── 81/
│   │   ├── 58/
│   │   ├── 91/
│   │   ├── 60/
│   │   ├── 34/
│   │   ├── f9/
│   │   ├── ac/
│   │   ├── 9f/
│   │   ├── b9/
│   │   ├── 36/
│   │   ├── 0c/
│   │   ├── 3a/
│   │   ├── e6/
│   │   ├── 94/
│   │   ├── 55/
│   │   ├── 16/
│   │   ├── 51/
│   │   ├── 78/
│   │   ├── d2/
│   │   ├── 5e/
│   │   ├── 92/
│   │   ├── b2/
│   │   ├── e4/
│   │   ├── 15/
│   │   ├── 09/
│   │   ├── 9a/
│   │   ├── c7/
│   │   ├── 62/
│   │   ├── a3/
│   │   ├── 5a/
│   │   ├── 90/
│   │   ├── b0/
│   │   ├── da/
│   │   ├── 01/
│   │   ├── fd/
│   │   ├── 07/
│   │   ├── 41/
│   │   ├── 3f/
│   │   ├── bf/
│   │   ├── 27/
│   │   ├── c4/
│   │   ├── ed/
│   │   ├── 2a/
│   │   ├── e5/
│   │   ├── 3d/
│   │   ├── 35/
│   │   ├── 4b/
│   │   ├── 98/
│   │   ├── bc/
│   │   ├── a2/
│   │   ├── 02/
│   │   ├── 8e/
│   │   ├── e0/
│   │   ├── 7c/
│   │   ├── 50/
│   │   ├── f1/
│   │   ├── 9e/
│   │   ├── 13/
│   │   ├── bb/
│   │   ├── c8/
│   │   ├── ba/
│   │   ├── 2b/
│   │   ├── e3/
│   │   ├── 4a/
│   │   ├── d0/
│   │   ├── 87/
│   │   ├── be/
│   │   ├── 80/
│   │   ├── f7/
│   │   ├── 37/
│   │   ├── ec/
│   │   ├── 12/
│   │   ├── e8/
│   │   ├── 71/
│   │   ├── info/
│   │   ├── ad/
│   │   ├── 04/
│   │   ├── 40/
│   │   ├── 46/
│   │   ├── 1c/
│   │   ├── 86/
│   │   ├── 1e/
│   │   ├── 31/
│   │   ├── 5b/
│   │   ├── c9/
│   │   ├── 7f/
│   │   ├── f0/
│   │   ├── c0/
│   │   ├── 99/
│   │   ├── 54/
│   │   ├── e9/
│   │   ├── 63/
│   │   ├── eb/
│   │   ├── 76/
│   │   ├── 56/
│   │   ├── 06/
│   │   ├── 9d/
│   │   ├── 29/
│   │   ├── c2/
│   │   ├── dd/
│   │   ├── ce/
│   │   ├── 0b/
│   │   ├── b6/
│   │   ├── 74/
│   │   ├── 3e/
│   │   ├── cf/
│   │   ├── 6f/
│   │   ├── 4f/
│   ├── branches/
│   ├── refs/
│   │   ├── heads/
│   │   ├── tags/
│   │   ├── remotes/
│   │   │   ├── origin/
docker/
│   ├── elasticsearch/
│   ├── │   ├── Dockerfile
│   ├── traefik/
│   ├── │   ├── Dockerfile
│   ├── logstash/
│   ├── │   ├── Dockerfile
│   ├── kibana/
│   ├── │   ├── Dockerfile
helm/
│   ├── elasticsearch/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml
│   ├── traefik/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml
│   │   ├── charts/
│   │   │   ├── traefik-10.24.0/
│   │   │   │   ├── traefik/
│   │   │   │   ├── │   ├── values.yaml
│   │   │   │   ├── │   ├── Chart.yaml
│   │   │   │   │   ├── crds/
│   │   │   │   │   ├── │   ├── traefikservices.yaml
│   │   │   │   │   ├── │   ├── serverstransports.yaml
│   │   │   │   │   ├── │   ├── middlewares.yaml
│   │   │   │   │   ├── │   ├── tlsstores.yaml
│   │   │   │   │   ├── │   ├── ingressroute.yaml
│   │   │   │   │   ├── │   ├── ingressroutetcp.yaml
│   │   │   │   │   ├── │   ├── tlsoptions.yaml
│   │   │   │   │   ├── │   ├── middlewarestcp.yaml
│   │   │   │   │   ├── │   ├── ingressrouteudp.yaml
│   │   │   │   │   ├── templates/
│   │   │   │   │   ├── │   ├── service.yaml
│   │   │   │   │   ├── │   ├── ingressclass.yaml
│   │   │   │   │   ├── │   ├── poddisruptionbudget.yaml
│   │   │   │   │   ├── │   ├── hpa.yaml
│   │   │   │   │   ├── │   ├── tlsoption.yaml
│   │   │   │   │   ├── │   ├── gateway.yaml
│   │   │   │   │   ├── │   ├── gatewayclass.yaml
│   │   │   │   │   ├── │   ├── daemonset.yaml
│   │   │   │   │   ├── │   ├── dashboard-hook-ingressroute.yaml
│   │   │   │   │   ├── │   ├── deployment.yaml
│   │   │   │   │   ├── │   ├── pvc.yaml
│   │   │   │   │   │   ├── rbac/
│   │   │   │   │   │   ├── │   ├── rolebinding.yaml
│   │   │   │   │   │   ├── │   ├── podsecuritypolicy.yaml
│   │   │   │   │   │   ├── │   ├── clusterrole.yaml
│   │   │   │   │   │   ├── │   ├── role.yaml
│   │   │   │   │   │   ├── │   ├── serviceaccount.yaml
│   │   │   │   │   │   ├── │   ├── clusterrolebinding.yaml
│   ├── logstash/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml
│   ├── kibana/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml

=== File: elasticsearch-git.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - elasticsearch-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: traefik-app.yaml ===
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"argoproj.io/v1alpha1","kind":"Application","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"metallb"},"name":"traefik","namespace":"argocd"},"spec":{"destination":{"namespace":"traefik","server":"https://kubernetes.default.svc"},"project":"default","source":{"chart":"traefik","helm":{"valueFiles":["values.yaml"]},"repoURL":"https://helm.traefik.io/traefik","targetRevision":"10.24.0"},"syncPolicy":{"automated":{"prune":true,"selfHeal":true},"syncOptions":["CreateNamespace=true"]}}}
  creationTimestamp: "2025-03-01T23:49:47Z"
  generation: 1063
  labels:
    app.kubernetes.io/instance: metallb
  managedFields:
  - apiVersion: argoproj.io/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations: {}
      f:spec:
        .: {}
        f:destination:
          .: {}
          f:namespace: {}
          f:server: {}
        f:project: {}
        f:source:
          .: {}
          f:helm: {}
        f:syncPolicy:
          .: {}
          f:automated:
            .: {}
            f:prune: {}
            f:selfHeal: {}
          f:syncOptions: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-03-01T23:49:47Z"
  - apiVersion: argoproj.io/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
      f:spec:
        f:source:
          f:chart: {}
          f:helm:
            f:valueFiles: {}
          f:repoURL: {}
          f:targetRevision: {}
    manager: argocd-controller
    operation: Update
    time: "2025-03-02T03:55:59Z"
  - apiVersion: argoproj.io/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        .: {}
        f:controllerNamespace: {}
        f:health:
          .: {}
          f:lastTransitionTime: {}
          f:status: {}
        f:history: {}
        f:operationState:
          .: {}
          f:finishedAt: {}
          f:message: {}
          f:operation:
            .: {}
            f:initiatedBy:
              .: {}
              f:username: {}
            f:retry: {}
            f:sync:
              .: {}
              f:revision: {}
              f:syncOptions: {}
              f:syncStrategy:
                .: {}
                f:hook:
                  .: {}
                  f:force: {}
          f:phase: {}
          f:startedAt: {}
          f:syncResult:
            .: {}
            f:resources: {}
            f:revision: {}
            f:source:
              .: {}
              f:chart: {}
              f:helm:
                .: {}
                f:valueFiles: {}
              f:repoURL: {}
              f:targetRevision: {}
        f:reconciledAt: {}
        f:resources: {}
        f:sourceType: {}
        f:summary:
          .: {}
          f:images: {}
        f:sync:
          .: {}
          f:comparedTo:
            .: {}
            f:destination:
              .: {}
              f:namespace: {}
              f:server: {}
            f:source:
              .: {}
              f:chart: {}
              f:helm:
                .: {}
                f:valueFiles: {}
              f:repoURL: {}
              f:targetRevision: {}
          f:revision: {}
          f:status: {}
    manager: argocd-application-controller
    operation: Update
    time: "2025-03-03T02:15:39Z"
  - apiVersion: argoproj.io/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:sourceHydrator: {}
    manager: argocd-server
    operation: Update
    time: "2025-03-03T02:15:39Z"
  name: traefik
  namespace: argocd
  resourceVersion: "177059"
  uid: 0bd85af7-0696-4164-b788-e1cbd2599f64
spec:
  destination:
    namespace: traefik
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm/traefik
    helm:
      valueFiles:
      - values.yaml
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
status:
  controllerNamespace: argocd
  health:
    lastTransitionTime: "2025-03-03T02:11:36Z"
    status: Healthy
  history:
  - deployStartedAt: "2025-03-03T00:20:41Z"
    deployedAt: "2025-03-03T00:20:44Z"
    id: 13
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T00:50:29Z"
    deployedAt: "2025-03-03T00:50:32Z"
    id: 14
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:05:47Z"
    deployedAt: "2025-03-03T01:05:50Z"
    id: 15
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:06:05Z"
    deployedAt: "2025-03-03T01:06:08Z"
    id: 16
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:12:18Z"
    deployedAt: "2025-03-03T01:12:21Z"
    id: 17
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:12:27Z"
    deployedAt: "2025-03-03T01:12:30Z"
    id: 18
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:39:33Z"
    deployedAt: "2025-03-03T01:39:36Z"
    id: 19
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T01:39:43Z"
    deployedAt: "2025-03-03T01:39:46Z"
    id: 20
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T02:11:43Z"
    deployedAt: "2025-03-03T02:11:46Z"
    id: 21
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  - deployStartedAt: "2025-03-03T02:15:35Z"
    deployedAt: "2025-03-03T02:15:38Z"
    id: 22
    initiatedBy:
      username: admin
    revision: 10.24.0
    source:
      chart: traefik
      helm:
        valueFiles:
        - values.yaml
      repoURL: https://helm.traefik.io/traefik
      targetRevision: 10.24.0
  operationState:
    finishedAt: "2025-03-03T02:15:38Z"
    message: successfully synced (no more tasks)
    operation:
      initiatedBy:
        username: admin
      retry: {}
      sync:
        revision: 10.24.0
        syncOptions:
        - CreateNamespace=true
        syncStrategy:
          hook:
            force: true
    phase: Succeeded
    startedAt: "2025-03-03T02:15:35Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Succeeded
        kind: ServiceAccount
        message: serviceaccount/traefik unchanged
        name: traefik
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/middlewaretcps.traefik.containo.us
          configured
        name: middlewaretcps.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/serverstransports.traefik.containo.us
          configured
        name: serverstransports.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/ingressrouteudps.traefik.containo.us
          configured
        name: ingressrouteudps.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/ingressroutes.traefik.containo.us
          configured
        name: ingressroutes.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/tlsstores.traefik.containo.us
          configured
        name: tlsstores.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/tlsoptions.traefik.containo.us
          configured
        name: tlsoptions.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/ingressroutetcps.traefik.containo.us
          configured
        name: ingressroutetcps.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/traefikservices.traefik.containo.us
          configured
        name: traefikservices.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apiextensions.k8s.io
        hookPhase: Succeeded
        kind: CustomResourceDefinition
        message: customresourcedefinition.apiextensions.k8s.io/middlewares.traefik.containo.us
          configured
        name: middlewares.traefik.containo.us
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: rbac.authorization.k8s.io
        hookPhase: Succeeded
        kind: ClusterRole
        message: clusterrole.rbac.authorization.k8s.io/traefik reconciled. clusterrole.rbac.authorization.k8s.io/traefik
          unchanged
        name: traefik
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: rbac.authorization.k8s.io
        hookPhase: Succeeded
        kind: ClusterRoleBinding
        message: clusterrolebinding.rbac.authorization.k8s.io/traefik reconciled.
          clusterrolebinding.rbac.authorization.k8s.io/traefik unchanged
        name: traefik
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Succeeded
        kind: Service
        message: service/traefik unchanged
        name: traefik
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Succeeded
        kind: Deployment
        message: deployment.apps/traefik configured
        name: traefik
        namespace: traefik
        status: Synced
        syncPhase: Sync
        version: v1
      - group: traefik.containo.us
        hookPhase: Succeeded
        hookType: PostSync
        kind: IngressRoute
        message: traefik-dashboard created
        name: traefik-dashboard
        namespace: traefik
        syncPhase: PostSync
        version: v1alpha1
      revision: 10.24.0
      source:
        chart: traefik
        helm:
          valueFiles:
          - values.yaml
        repoURL: https://helm.traefik.io/traefik
        targetRevision: 10.24.0
  reconciledAt: "2025-03-03T02:15:39Z"
  resources:
  - health:
      status: Healthy
    kind: Service
    name: traefik
    namespace: traefik
    status: Synced
    version: v1
  - kind: ServiceAccount
    name: traefik
    namespace: traefik
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: ingressroutes.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: ingressroutetcps.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: ingressrouteudps.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: middlewares.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: middlewaretcps.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: serverstransports.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: tlsoptions.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: tlsstores.traefik.containo.us
    status: Synced
    version: v1
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: traefikservices.traefik.containo.us
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: traefik
    namespace: traefik
    status: Synced
    version: v1
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
    name: traefik
    status: Synced
    version: v1
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
    name: traefik
    status: Synced
    version: v1
  - group: traefik.containo.us
    hook: true
    kind: IngressRoute
    name: traefik-dashboard
    namespace: traefik
    requiresPruning: true
    version: v1alpha1
  sourceHydrator: {}
  sourceType: Helm
  summary:
    images:
    - traefik:2.8.0
  sync:
    comparedTo:
      destination:
        namespace: traefik
        server: https://kubernetes.default.svc
      source:
        chart: traefik
        helm:
          valueFiles:
          - values.yaml
        repoURL: https://helm.traefik.io/traefik
        targetRevision: 10.24.0
    revision: 10.24.0
    status: Synced


=== File: elk-ingress-routes.yaml ===
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: elasticsearch-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`elasticsearch.1xmr.com`)
      kind: Rule
      services:
        - name: elasticsearch-master
          namespace: elk
          port: 9200
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`kibana.1xmr.com`)
      kind: Rule
      services:
        - name: kibana
          namespace: elk
          port: 5601
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: logstash-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`logstash.1xmr.com`)
      kind: Rule
      services:
        - name: logstash
          namespace: elk
          port: 5044
  tls:
    certResolver: letsencrypt


=== File: kibana-git.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - kibana-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: logstash-git.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - logstash-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: traefik-git.yaml ===
#/elk-stack-repo/traefik-git.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm/traefik  # Updated to point to the correct subdirectory
    helm:
      valueFiles:
        - values.yaml  # Updated to match the actual filename in the directory
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/setup/argocd-installation.yaml ===
# argocd/setup/argocd-installation.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# This includes the core ArgoCD installation
# When applying, use: kubectl apply -f argocd-installation.yaml -n argocd


=== File: argocd/applications/logstash.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: logstash
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/metallb.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'git@github.com:wrightpt/elk-stack-kubernetes-simplified.git'
    targetRevision: main
    path: argocd/applications   # Adjust as needed
    directory:
      recurse: true             # If needed for scanning nested files
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: metallb-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true



=== File: argocd/applications/elasticsearch.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: elasticsearch
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/kibana.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: kibana
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/traefik.yaml ===
#/elk-stack-repo/argocd/applications/traefik.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    chart: traefik
    targetRevision: 10.24.0
    helm:
      valueFiles:
        - helm/traefik/values.yaml  # Updated to correct path
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/metallb-config.yaml ===
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: home-lan-pool
  namespace: metallb-system
spec:
  addresses:
    - 192.168.1.240-192.168.1.250
  # Set autoAssign to 'true' if you want MetalLB to automatically assign IPs 
  # from this pool to LoadBalancer Services.
  autoAssign: true

---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: home-lan-advert
  namespace: metallb-system
spec:
  # Name of the IPAddressPool to advertise on L2
  ipAddressPools:
    - home-lan-pool



=== File: docker/elasticsearch/Dockerfile ===
FROM docker.elastic.co/elasticsearch/elasticsearch:7.17.3

# Copy custom configuration files
COPY elasticsearch.yml /usr/share/elasticsearch/config/
COPY jvm.options /usr/share/elasticsearch/config/

# Set permissions
USER root
RUN chmod 660 /usr/share/elasticsearch/config/elasticsearch.yml \
    && chmod 660 /usr/share/elasticsearch/config/jvm.options \
    && chown -R 1000:0 /usr/share/elasticsearch/config

# Switch back to elasticsearch user
USER 1000


=== File: docker/traefik/Dockerfile ===
FROM traefik:v2.9

# Copy Traefik configuration
COPY traefik.yml /etc/traefik/
COPY config.yml /etc/traefik/

# REDACTED: Sensitive content removed
RUN mkdir -p /letsencrypt


=== File: docker/logstash/Dockerfile ===
FROM docker.elastic.co/logstash/logstash:7.17.3

# Copy configuration files
COPY logstash.yml /usr/share/logstash/config/
COPY pipelines.yml /usr/share/logstash/config/
COPY jvm.options /usr/share/logstash/config/
COPY conf.d/ /usr/share/logstash/pipeline/

# Set permissions
USER root
RUN chmod 660 /usr/share/logstash/config/logstash.yml \
    && chmod 660 /usr/share/logstash/config/pipelines.yml \
    && chmod 660 /usr/share/logstash/config/jvm.options \
    && chmod -R 660 /usr/share/logstash/pipeline/ \
    && chown -R 1000:0 /usr/share/logstash/config \
    && chown -R 1000:0 /usr/share/logstash/pipeline

# Switch back to logstash user
USER 1000


=== File: docker/kibana/Dockerfile ===
FROM docker.elastic.co/kibana/kibana:7.17.3

# Copy custom configuration
COPY kibana.yml /usr/share/kibana/config/

# Set permissions
USER root
RUN chmod 660 /usr/share/kibana/config/kibana.yml \
    && chown -R 1000:0 /usr/share/kibana/config

# Switch back to kibana user
USER 1000


=== File: helm/elasticsearch/values.yaml ===
# helm/elasticsearch-values.yaml
replicas: 1  # Adjust based on your home server capacity

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "30Gi"

# Network settings
service:
  type: ClusterIP

# Security settings
securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000

# Config for ES
esConfig:
  elasticsearch.yml: |
    cluster.name: home-cluster
    discovery.type: single-node
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true


=== File: helm/elasticsearch/Chart.yaml ===
apiVersion: v2
name: elasticsearch
description: Elasticsearch Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: elasticsearch
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: helm/traefik/values.yaml ===
# elk-stack-repo/helm/traefik/values.yaml
# Define the service configuration for Traefik
service:
  type: LoadBalancer
  externalIPs:
    - 192.168.1.240
  ports:
    web:
      port: 80
      protocol: TCP
    websecure:
      port: 443
      protocol: TCP

# Enable the Traefik dashboard for monitoring
dashboard:
  enabled: true

# Configure an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true
    rule: "Host(`traefik.local`) && PathPrefix(`/dashboard`)"
    tls:
      certResolver: letsencrypt

# Enable Kubernetes providers to allow Traefik to discover services and ingresses
providers:
  kubernetesCRD:
    enabled: true
  kubernetesIngress:
    enabled: true

# REDACTED: Sensitive content removed
additionalArguments:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
  - "--serverstransport.insecureskipverify=true"
  - "--log.level=DEBUG"

# REDACTED: Sensitive content removed
persistence:
  enabled: true
  name: traefik-certs
  accessMode: ReadWriteOnce
  size: 128Mi
  storageClass: "local-storage"
  path: /data

# REDACTED: Sensitive content removed
env:
  - name: CF_API_TOKEN
    valueFrom:
# REDACTED: Sensitive content removed
        name: cloudflare-api-token
# REDACTED: Sensitive content removed

# Additional configuration for routing
additionalResources:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: traefik-config
      namespace: traefik
    data:
      config.yml: |
        http:
          routers:
            rpc:
              rule: "Host(`rpc.1xmr.com`)"
              entryPoints:
                - websecure
              service: rpc
              tls:
                certResolver: letsencrypt
            wallet:
              rule: "Host(`wallet.1xmr.com`)"
              entryPoints:
                - websecure
              service: wallet
              tls:
                certResolver: letsencrypt
            kibana:
              rule: "Host(`kibana.1xmr.com`)"
              entryPoints:
                - websecure
              service: kibana
              tls:
                certResolver: letsencrypt
            elasticsearch:
              rule: "Host(`elasticsearch.1xmr.com`)"
              entryPoints:
                - websecure
              service: elasticsearch
              tls:
                certResolver: letsencrypt
              middlewares:
                - es-auth
            logstash:
              rule: "Host(`logstash.1xmr.com`)"
              entryPoints:
                - websecure
              service: logstash
              tls:
                certResolver: letsencrypt
            traefik-dashboard:
              rule: "Host(`traefik.local`) && PathPrefix(`/dashboard`)"
              entryPoints:
                - websecure
              service: api@internal
              tls:
                certResolver: letsencrypt
          services:
            rpc:
              loadBalancer:
                servers:
                  - url: "http://rpc-service:18082"
                passHostHeader: true
            wallet:
              loadBalancer:
                servers:
                  - url: "http://wallet-service:18081"
                passHostHeader: true
            kibana:
              loadBalancer:
                servers:
                  - url: "http://kibana:5601"
                passHostHeader: true
            elasticsearch:
              loadBalancer:
                servers:
                  - url: "http://elasticsearch-master:9200"
                passHostHeader: true
            logstash:
              loadBalancer:
                servers:
                  - url: "http://logstash:5044"
                passHostHeader: true
          middlewares:
            es-auth:
              basicAuth:
                users:
                  - "admin:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"

# Logs for troubleshooting
logs:
  general:
    level: DEBUG

=== File: helm/traefik/Chart.yaml ===
apiVersion: v2
name: traefik
description: Traefik Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 10.24.0
dependencies:
  - name: traefik
    version: 10.24.0
    repository: https://helm.traefik.io/traefik


=== File: helm/traefik/charts/traefik-10.24.0/traefik/values.yaml ===
# Default values for Traefik
image:
  name: traefik
  # defaults to appVersion
  tag: ""
  pullPolicy: IfNotPresent

#
# Configure the deployment
#
deployment:
  enabled: true
  # Can be either Deployment or DaemonSet
  kind: Deployment
  # Number of pods of the deployment (only applies when kind == Deployment)
  replicas: 1
  # Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
  # revisionHistoryLimit: 1
  # Amount of time (in seconds) before Kubernetes will send the SIGKILL signal if Traefik does not shut down
  terminationGracePeriodSeconds: 60
  # The minimum number of seconds Traefik needs to be up and running before the DaemonSet/Deployment controller considers it available
  minReadySeconds: 0
  # Additional deployment annotations (e.g. for jaeger-operator sidecar injection)
  annotations: {}
  # Additional deployment labels (e.g. for filtering deployment by custom labels)
  labels: {}
  # Additional pod annotations (e.g. for mesh injection or prometheus scraping)
  podAnnotations: {}
  # Additional Pod labels (e.g. for filtering Pod by custom labels)
  podLabels: {}
  # Additional containers (e.g. for metric offloading sidecars)
  additionalContainers: []
    # https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host
    # - name: socat-proxy
    # image: alpine/socat:1.0.5
    # args: ["-s", "-u", "udp-recv:8125", "unix-sendto:/socket/socket"]
    # volumeMounts:
    #   - name: dsdsocket
    #     mountPath: /socket
  # Additional volumes available for use with initContainers and additionalContainers
  additionalVolumes: []
    # - name: dsdsocket
    #   hostPath:
    #     path: /var/run/statsd-exporter
  # Additional initContainers (e.g. for setting file permission as shown below)
  initContainers: []
    # The "volume-permissions" init container is required if you run into permission issues.
    # Related issue: https://github.com/traefik/traefik/issues/6972
    # - name: volume-permissions
    #   image: busybox:1.31.1
    #   command: ["sh", "-c", "chmod -Rv 600 /data/*"]
    #   volumeMounts:
    #     - name: data
    #       mountPath: /data
  # Use process namespace sharing
  shareProcessNamespace: false
  # Custom pod DNS policy. Apply if `hostNetwork: true`
  # dnsPolicy: ClusterFirstWithHostNet
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  # maxUnavailable: 1
  # maxUnavailable: 33%
  # minAvailable: 0
  # minAvailable: 25%

# Use ingressClass. Ignored if Traefik version < 2.3 / kubernetes < 1.18.x
ingressClass:
  # true is not unit-testable yet, pending https://github.com/rancher/helm-unittest/pull/12
  enabled: false
  isDefaultClass: false
  # Use to force a networking.k8s.io API Version for certain CI/CD applications. E.g. "v1beta1"
  fallbackApiVersion: ""

# Activate Pilot integration
pilot:
  enabled: false
  token: ""
  # Toggle Pilot Dashboard
  # dashboard: false

# Enable experimental features
experimental:
  http3:
    enabled: false
  plugins:
    enabled: false
  kubernetesGateway:
    enabled: false
# REDACTED: Sensitive content removed
    #   group: "core"
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    # By default, Gateway would be created to the Namespace you are deploying Traefik to.
    # You may create that Gateway in another namespace, setting its name below:
    # namespace: default

# Create an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true
    # Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
    annotations: {}
    # Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
    labels: {}

rollingUpdate:
  maxUnavailable: 1
  maxSurge: 1

# Customize liveness and readiness probe values.
readinessProbe:
  failureThreshold: 1
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

#
# Configure providers
#
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: false
    allowExternalNameServices: false
    allowEmptyServices: false
    # ingressClass: traefik-internal
    # labelSelector: environment=production,method=traefik
    namespaces: []
      # - "default"

  kubernetesIngress:
    enabled: true
    allowExternalNameServices: false
    allowEmptyServices: false
    # ingressClass: traefik-internal
    # labelSelector: environment=production,method=traefik
    namespaces: []
      # - "default"
    # IP used for Kubernetes Ingress endpoints
    publishedService:
      enabled: false
      # Published Kubernetes Service to copy status from. Format: namespace/servicename
      # By default this Traefik service
      # pathOverride: ""

#
# Add volumes to the traefik pod. The volume name will be passed to tpl.
# This can be used to mount a cert pair or a configmap that holds a config.toml file.
# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# additionalArguments:
# - "--providers.file.filename=/config/dynamic.toml"
# - "--ping"
# - "--ping.entrypoint=web"
volumes: []
# - name: public-cert
#   mountPath: "/certs"
# REDACTED: Sensitive content removed
# - name: '{{ printf "%s-configs" .Release.Name }}'
#   mountPath: "/config"
#   type: configMap

# Additional volumeMounts to add to the Traefik container
additionalVolumeMounts: []
  # For instance when using a logshipper for access logs
  # - name: traefik-logs
  #   mountPath: /var/log/traefik

# Logs
# https://docs.traefik.io/observability/logs/
logs:
  # Traefik logs concern everything that happens to Traefik itself (startup, configuration, events, shutdown, and so on).
  general:
    # By default, the logs use a text format (common), but you can
    # also ask for the json format in the format option
    # format: json
    # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
    level: ERROR
  access:
    # To enable access logs
    enabled: false
    # By default, logs are written using the Common Log Format (CLF).
    # To write logs in JSON, use json in the format option.
    # If the given format is unsupported, the default (CLF) is used instead.
    # format: json
    # To write the logs in an asynchronous fashion, specify a bufferingSize option.
    # This option represents the number of log lines Traefik will keep in memory before writing
    # them to the selected output. In some cases, this option can greatly help performances.
    # bufferingSize: 100
    # Filtering https://docs.traefik.io/observability/access-logs/#filtering
    filters: {}
      # statuscodes: "200,300-302"
      # retryattempts: true
      # minduration: 10ms
    # Fields
    # https://docs.traefik.io/observability/access-logs/#limiting-the-fieldsincluding-headers
    fields:
      general:
        defaultmode: keep
        names: {}
          # Examples:
          # ClientUsername: drop
      headers:
        defaultmode: drop
        names: {}
          # Examples:
          # User-Agent: redact
          # Authorization: drop
          # Content-Type: keep

metrics:
  # datadog:
  #   address: 127.0.0.1:8125
  # influxdb:
  #   address: localhost:8089
  #   protocol: udp
  prometheus:
    entryPoint: metrics
  #  addRoutersLabels: true
  # statsd:
  #   address: localhost:8125

tracing: {}
  # instana:
  #   enabled: true
  # datadog:
  #   localAgentHostPort: 127.0.0.1:8126
  #   debug: false
  #   globalTag: ""
  #   prioritySampling: false

globalArguments:
  - "--global.checknewversion"
  - "--global.sendanonymoususage"

#
# Configure Traefik static configuration
# Additional arguments to be passed at Traefik's binary
# All available options available on https://docs.traefik.io/reference/static-configuration/cli/
## Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
additionalArguments: []
#  - "--providers.kubernetesingress.ingressclass=traefik-internal"
#  - "--log.level=DEBUG"

# Environment variables to be passed to Traefik's binary
env: []
# - name: SOME_VAR
#   value: some-var-value
# - name: SOME_VAR_FROM_CONFIG_MAP
#   valueFrom:
#     configMapRef:
#       name: configmap-name
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
#   valueFrom:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed

envFrom: []
# - configMapRef:
#     name: config-map-name
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed

# Configure ports
ports:
  # The name of this one can't be changed as it is used for the readiness and
  # liveness probes, but you can adjust its config to your liking
  traefik:
    port: 9000
    # Use hostPort if set.
    # hostPort: 9000
    #
    # Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
    # means it's listening on all your interfaces and all your IPs. You may want
    # to set this value if you need traefik to listen on specific interface
    # only.
    # hostIP: 192.168.100.10

    # Override the liveness/readiness port. This is useful to integrate traefik
    # with an external Load Balancer that performs healthchecks.
    # healthchecksPort: 9000

    # Defines whether the port is exposed if service.type is LoadBalancer or
    # NodePort.
    #
    # You SHOULD NOT expose the traefik port on production deployments.
    # If you want to access it from outside of your cluster,
    # use `kubectl port-forward` or create a secure ingress
    expose: false
    # The exposed port for this service
    exposedPort: 9000
    # The port protocol (TCP/UDP)
    protocol: TCP
  web:
    port: 8000
    # hostPort: 8000
    expose: true
    exposedPort: 80
    # The port protocol (TCP/UDP)
    protocol: TCP
    # Use nodeport if set. This is useful if you have configured Traefik in a
    # LoadBalancer
    # nodePort: 32080
    # Port Redirections
    # Added in 2.2, you can make permanent redirects via entrypoints.
    # https://docs.traefik.io/routing/entrypoints/#redirection
    # redirectTo: websecure
  websecure:
    port: 8443
    # hostPort: 8443
    expose: true
    exposedPort: 443
    # The port protocol (TCP/UDP)
    protocol: TCP
    # nodePort: 32443
    # Enable HTTP/3.
    # Requires enabling experimental http3 feature and tls.
    # Note that you cannot have a UDP entrypoint with the same port.
    # http3: true
    # Set TLS at the entrypoint
    # https://doc.traefik.io/traefik/routing/entrypoints/#tls
    tls:
      enabled: false
      # this is the name of a TLSOption definition
      options: ""
      certResolver: ""
      domains: []
      # - main: example.com
      #   sans:
      #     - foo.example.com
      #     - bar.example.com
  metrics:
    port: 9100
    # hostPort: 9100
    # Defines whether the port is exposed if service.type is LoadBalancer or
    # NodePort.
    #
    # You may not want to expose the metrics port on production deployments.
    # If you want to access it from outside of your cluster,
    # use `kubectl port-forward` or create a secure ingress
    expose: false
    # The exposed port for this service
    exposedPort: 9100
    # The port protocol (TCP/UDP)
    protocol: TCP

# TLS Options are created as TLSOption CRDs
# https://doc.traefik.io/traefik/https/tls/#tls-options
# Example:
# tlsOptions:
#   default:
#     sniStrict: true
#     preferServerCipherSuites: true
#   foobar:
#     curvePreferences:
#       - CurveP521
#       - CurveP384
tlsOptions: {}

# Options for the main traefik service, where the entrypoints traffic comes
# from.
service:
  enabled: true
  type: LoadBalancer
  # Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  annotations: {}
  # Additional annotations for TCP service only
  annotationsTCP: {}
  # Additional annotations for UDP service only
  annotationsUDP: {}
  # Additional service labels (e.g. for filtering Service by custom labels)
  labels: {}
  # Additional entries here will be added to the service spec.
  # Cannot contain type, selector or ports entries.
  spec: {}
    # externalTrafficPolicy: Cluster
    # loadBalancerIP: "1.2.3.4"
    # clusterIP: "2.3.4.5"
  loadBalancerSourceRanges: []
    # - 192.168.0.1/32
    # - 172.16.0.0/16
  externalIPs: []
    # - 1.2.3.4
  # One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  # List of IP families (e.g. IPv4 and/or IPv6).
  # ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6

## Create HorizontalPodAutoscaler object.
##
autoscaling:
  enabled: false
#   minReplicas: 1
#   maxReplicas: 10
#   metrics:
#   - type: Resource
#     resource:
#       name: cpu
#       targetAverageUtilization: 60
#   - type: Resource
#     resource:
#       name: memory
#       targetAverageUtilization: 60

# Enable persistence using Persistent Volume Claims
# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
# After the pvc has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# additionalArguments:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
persistence:
  enabled: false
  name: data
#  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 128Mi
  # storageClass: ""
  path: /data
  annotations: {}
  # subPath: "" # only mount a subpath of the Volume into the pod

certResolvers: {}
#   letsencrypt:
#     # for challenge options cf. https://doc.traefik.io/traefik/https/acme/
#     email: email@example.com
#     dnsChallenge:
#       # also add the provider's required configuration under env
# REDACTED: Sensitive content removed
#       # cf. https://doc.traefik.io/traefik/https/acme/#providers
#       provider: digitalocean
#       # add futher options for the dns challenge as needed
#       # cf. https://doc.traefik.io/traefik/https/acme/#dnschallenge
#       delayBeforeCheck: 30
#       resolvers:
#         - 1.1.1.1
#         - 8.8.8.8
#     tlsChallenge: true
#     httpChallenge:
#       entryPoint: "web"
#     # match the path to persistence
#     storage: /data/acme.json

# If hostNetwork is true, runs traefik in the host network namespace
# To prevent unschedulabel pods due to port collisions, if hostNetwork=true
# and replicas>1, a pod anti-affinity is recommended and will be set if the
# affinity is left as default.
hostNetwork: false

# Whether Role Based Access Control objects like roles and rolebindings should be created
rbac:
  enabled: true

  # If set to false, installs ClusterRole and ClusterRoleBinding so Traefik can be used across namespaces.
  # If set to true, installs namespace-specific Role and RoleBinding and requires provider configuration be set to that same namespace
  namespaced: false

# Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding
podSecurityPolicy:
  enabled: false

# The service account the pods will use to interact with the Kubernetes API
serviceAccount:
  # If set, an existing service account is used
  # If not set, a service account is created automatically using the fullname template
  name: ""

# Additional serviceAccount annotations (e.g. for oidc authentication)
serviceAccountAnnotations: {}

resources: {}
  # requests:
  #   cpu: "100m"
  #   memory: "50Mi"
  # limits:
  #   cpu: "300m"
  #   memory: "150Mi"
affinity: {}
# # This example pod anti-affinity forces the scheduler to put traefik pods
# # on nodes where no other traefik pods are scheduled.
# # It should be used when hostNetwork: true to prevent port conflicts
#   podAntiAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       - labelSelector:
#           matchExpressions:
# REDACTED: Sensitive content removed
#               operator: In
#               values:
#                 - {{ template "traefik.name" . }}
# REDACTED: Sensitive content removed
nodeSelector: {}
tolerations: []

# Pods can have priority.
# Priority indicates the importance of a Pod relative to other Pods.
priorityClassName: ""

# Set the container security context
# To run the container with ports below 1024 this will need to be adjust to run as root
securityContext:
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532

podSecurityContext:
  fsGroup: 65532


=== File: helm/traefik/charts/traefik-10.24.0/traefik/Chart.yaml ===
apiVersion: v2
appVersion: 2.8.0
description: A Traefik based Kubernetes ingress controller
home: https://traefik.io/
icon: https://raw.githubusercontent.com/traefik/traefik/v2.3/docs/content/assets/img/traefik.logo.png
# REDACTED: Sensitive content removed
- traefik
- ingress
maintainers:
- email: emile@vauge.com
  name: emilevauge
- email: daniel.tomcej@gmail.com
  name: dtomcej
- email: ldez@traefik.io
  name: ldez
name: traefik
sources:
- https://github.com/traefik/traefik
- https://github.com/traefik/traefik-helm-chart
type: application
version: 10.24.0


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/traefikservices.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: traefikservices.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TraefikService
    listKind: TraefikServiceList
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'TraefikService is the CRD implementation of a Traefik Service.
          TraefikService object allows to:  - Apply weight to Services on load-balancing  -
          Mirror traffic on services More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-traefikservice'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TraefikServiceSpec defines the desired state of a TraefikService.
            properties:
              mirroring:
                description: Mirroring defines the Mirroring service configuration.
                properties:
                  kind:
                    description: Kind defines the kind of the Service.
                    enum:
                    - Service
                    - TraefikService
                    type: string
                  maxBodySize:
                    description: MaxBodySize defines the maximum size allowed for
                      the body of the request. If the body is larger, the request
                      is not mirrored. Default value is -1, which means unlimited
                      size.
                    format: int64
                    type: integer
                  mirrors:
                    description: Mirrors defines the list of mirrors where Traefik
                      will duplicate the traffic.
                    items:
                      description: MirrorService holds the mirror configuration.
                      properties:
                        kind:
                          description: Kind defines the kind of the Service.
                          enum:
                          - Service
                          - TraefikService
                          type: string
                        name:
                          description: Name defines the name of the referenced Kubernetes
                            Service or TraefikService. The differentiation between
                            the two is specified in the Kind field.
                          type: string
                        namespace:
                          description: Namespace defines the namespace of the referenced
                            Kubernetes Service or TraefikService.
                          type: string
                        passHostHeader:
                          description: PassHostHeader defines whether the client Host
                            header is forwarded to the upstream Kubernetes Service.
                            By default, passHostHeader is true.
                          type: boolean
                        percent:
                          description: 'Percent defines the part of the traffic to
                            mirror. Supported values: 0 to 100.'
                          type: integer
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port defines the port of a Kubernetes Service.
                            This can be a reference to a named port.
                          x-kubernetes-int-or-string: true
                        responseForwarding:
                          description: ResponseForwarding defines how Traefik forwards
                            the response from the upstream Kubernetes Service to the
                            client.
                          properties:
                            flushInterval:
                              description: 'FlushInterval defines the interval, in
                                milliseconds, in between flushes to the client while
                                copying the response body. A negative value means
                                to flush immediately after each write to the client.
                                This configuration is ignored when ReverseProxy recognizes
                                a response as a streaming response; for such responses,
                                writes are flushed to the client immediately. Default:
                                100ms'
                              type: string
                          type: object
                        scheme:
                          description: Scheme defines the scheme to use for the request
                            to the upstream Kubernetes Service. It defaults to https
                            when Kubernetes Service port is 443, http otherwise.
                          type: string
                        serversTransport:
                          description: ServersTransport defines the name of ServersTransport
                            resource to use. It allows to configure the transport
                            between Traefik and your servers. Can only be used on
                            a Kubernetes Service.
                          type: string
                        sticky:
                          description: 'Sticky defines the sticky sessions configuration.
                            More info: https://doc.traefik.io/traefik/v2.8/routing/services/#sticky-sessions'
                          properties:
                            cookie:
                              description: Cookie defines the sticky cookie configuration.
                              properties:
                                httpOnly:
                                  description: HTTPOnly defines whether the cookie
                                    can be accessed by client-side APIs, such as JavaScript.
                                  type: boolean
                                name:
                                  description: Name defines the Cookie name.
                                  type: string
                                sameSite:
                                  description: 'SameSite defines the same site policy.
                                    More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                                  type: string
                                secure:
                                  description: Secure defines whether the cookie can
                                    only be transmitted over an encrypted connection
                                    (i.e. HTTPS).
                                  type: boolean
                              type: object
                          type: object
                        strategy:
                          description: Strategy defines the load balancing strategy
                            between the servers. RoundRobin is the only supported
                            value at the moment.
                          type: string
                        weight:
                          description: Weight defines the weight and should only be
                            specified when Name references a TraefikService object
                            (and to be precise, one that embeds a Weighted Round Robin).
                          type: integer
                      required:
                      - name
                      type: object
                    type: array
                  name:
                    description: Name defines the name of the referenced Kubernetes
                      Service or TraefikService. The differentiation between the two
                      is specified in the Kind field.
                    type: string
                  namespace:
                    description: Namespace defines the namespace of the referenced
                      Kubernetes Service or TraefikService.
                    type: string
                  passHostHeader:
                    description: PassHostHeader defines whether the client Host header
                      is forwarded to the upstream Kubernetes Service. By default,
                      passHostHeader is true.
                    type: boolean
                  port:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Port defines the port of a Kubernetes Service. This
                      can be a reference to a named port.
                    x-kubernetes-int-or-string: true
                  responseForwarding:
                    description: ResponseForwarding defines how Traefik forwards the
                      response from the upstream Kubernetes Service to the client.
                    properties:
                      flushInterval:
                        description: 'FlushInterval defines the interval, in milliseconds,
                          in between flushes to the client while copying the response
                          body. A negative value means to flush immediately after
                          each write to the client. This configuration is ignored
                          when ReverseProxy recognizes a response as a streaming response;
                          for such responses, writes are flushed to the client immediately.
                          Default: 100ms'
                        type: string
                    type: object
                  scheme:
                    description: Scheme defines the scheme to use for the request
                      to the upstream Kubernetes Service. It defaults to https when
                      Kubernetes Service port is 443, http otherwise.
                    type: string
                  serversTransport:
                    description: ServersTransport defines the name of ServersTransport
                      resource to use. It allows to configure the transport between
                      Traefik and your servers. Can only be used on a Kubernetes Service.
                    type: string
                  sticky:
                    description: 'Sticky defines the sticky sessions configuration.
                      More info: https://doc.traefik.io/traefik/v2.8/routing/services/#sticky-sessions'
                    properties:
                      cookie:
                        description: Cookie defines the sticky cookie configuration.
                        properties:
                          httpOnly:
                            description: HTTPOnly defines whether the cookie can be
                              accessed by client-side APIs, such as JavaScript.
                            type: boolean
                          name:
                            description: Name defines the Cookie name.
                            type: string
                          sameSite:
                            description: 'SameSite defines the same site policy. More
                              info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                            type: string
                          secure:
                            description: Secure defines whether the cookie can only
                              be transmitted over an encrypted connection (i.e. HTTPS).
                            type: boolean
                        type: object
                    type: object
                  strategy:
                    description: Strategy defines the load balancing strategy between
                      the servers. RoundRobin is the only supported value at the moment.
                    type: string
                  weight:
                    description: Weight defines the weight and should only be specified
                      when Name references a TraefikService object (and to be precise,
                      one that embeds a Weighted Round Robin).
                    type: integer
                required:
                - name
                type: object
              weighted:
                description: Weighted defines the Weighted Round Robin configuration.
                properties:
                  services:
                    description: Services defines the list of Kubernetes Service and/or
                      TraefikService to load-balance, with weight.
                    items:
                      description: Service defines an upstream HTTP service to proxy
                        traffic to.
                      properties:
                        kind:
                          description: Kind defines the kind of the Service.
                          enum:
                          - Service
                          - TraefikService
                          type: string
                        name:
                          description: Name defines the name of the referenced Kubernetes
                            Service or TraefikService. The differentiation between
                            the two is specified in the Kind field.
                          type: string
                        namespace:
                          description: Namespace defines the namespace of the referenced
                            Kubernetes Service or TraefikService.
                          type: string
                        passHostHeader:
                          description: PassHostHeader defines whether the client Host
                            header is forwarded to the upstream Kubernetes Service.
                            By default, passHostHeader is true.
                          type: boolean
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port defines the port of a Kubernetes Service.
                            This can be a reference to a named port.
                          x-kubernetes-int-or-string: true
                        responseForwarding:
                          description: ResponseForwarding defines how Traefik forwards
                            the response from the upstream Kubernetes Service to the
                            client.
                          properties:
                            flushInterval:
                              description: 'FlushInterval defines the interval, in
                                milliseconds, in between flushes to the client while
                                copying the response body. A negative value means
                                to flush immediately after each write to the client.
                                This configuration is ignored when ReverseProxy recognizes
                                a response as a streaming response; for such responses,
                                writes are flushed to the client immediately. Default:
                                100ms'
                              type: string
                          type: object
                        scheme:
                          description: Scheme defines the scheme to use for the request
                            to the upstream Kubernetes Service. It defaults to https
                            when Kubernetes Service port is 443, http otherwise.
                          type: string
                        serversTransport:
                          description: ServersTransport defines the name of ServersTransport
                            resource to use. It allows to configure the transport
                            between Traefik and your servers. Can only be used on
                            a Kubernetes Service.
                          type: string
                        sticky:
                          description: 'Sticky defines the sticky sessions configuration.
                            More info: https://doc.traefik.io/traefik/v2.8/routing/services/#sticky-sessions'
                          properties:
                            cookie:
                              description: Cookie defines the sticky cookie configuration.
                              properties:
                                httpOnly:
                                  description: HTTPOnly defines whether the cookie
                                    can be accessed by client-side APIs, such as JavaScript.
                                  type: boolean
                                name:
                                  description: Name defines the Cookie name.
                                  type: string
                                sameSite:
                                  description: 'SameSite defines the same site policy.
                                    More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                                  type: string
                                secure:
                                  description: Secure defines whether the cookie can
                                    only be transmitted over an encrypted connection
                                    (i.e. HTTPS).
                                  type: boolean
                              type: object
                          type: object
                        strategy:
                          description: Strategy defines the load balancing strategy
                            between the servers. RoundRobin is the only supported
                            value at the moment.
                          type: string
                        weight:
                          description: Weight defines the weight and should only be
                            specified when Name references a TraefikService object
                            (and to be precise, one that embeds a Weighted Round Robin).
                          type: integer
                      required:
                      - name
                      type: object
                    type: array
                  sticky:
                    description: 'Sticky defines whether sticky sessions are enabled.
                      More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#stickiness-and-load-balancing'
                    properties:
                      cookie:
                        description: Cookie defines the sticky cookie configuration.
                        properties:
                          httpOnly:
                            description: HTTPOnly defines whether the cookie can be
                              accessed by client-side APIs, such as JavaScript.
                            type: boolean
                          name:
                            description: Name defines the Cookie name.
                            type: string
                          sameSite:
                            description: 'SameSite defines the same site policy. More
                              info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                            type: string
                          secure:
                            description: Secure defines whether the cookie can only
                              be transmitted over an encrypted connection (i.e. HTTPS).
                            type: boolean
                        type: object
                    type: object
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/serverstransports.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: serverstransports.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: ServersTransport
    listKind: ServersTransportList
    plural: serverstransports
    singular: serverstransport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'ServersTransport is the CRD implementation of a ServersTransport.
          If no serversTransport is specified, the default@internal will be used.
          The default@internal serversTransport is created from the static configuration.
          More info: https://doc.traefik.io/traefik/v2.8/routing/services/#serverstransport_1'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServersTransportSpec defines the desired state of a ServersTransport.
            properties:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                items:
                  type: string
                type: array
              disableHTTP2:
                description: DisableHTTP2 disables HTTP/2 for connections with backend
                  servers.
                type: boolean
              forwardingTimeouts:
                description: ForwardingTimeouts defines the timeouts for requests
                  forwarded to the backend servers.
                properties:
                  dialTimeout:
                    anyOf:
                    - type: integer
                    - type: string
                    description: DialTimeout is the amount of time to wait until a
                      connection to a backend server can be established.
                    x-kubernetes-int-or-string: true
                  idleConnTimeout:
                    anyOf:
                    - type: integer
                    - type: string
                    description: IdleConnTimeout is the maximum period for which an
                      idle HTTP keep-alive connection will remain open before closing
                      itself.
                    x-kubernetes-int-or-string: true
                  pingTimeout:
                    anyOf:
                    - type: integer
                    - type: string
                    description: PingTimeout is the timeout after which the HTTP/2
                      connection will be closed if a response to ping is not received.
                    x-kubernetes-int-or-string: true
                  readIdleTimeout:
                    anyOf:
                    - type: integer
                    - type: string
                    description: ReadIdleTimeout is the timeout after which a health
                      check using ping frame will be carried out if no frame is received
                      on the HTTP/2 connection.
                    x-kubernetes-int-or-string: true
                  responseHeaderTimeout:
                    anyOf:
                    - type: integer
                    - type: string
                    description: ResponseHeaderTimeout is the amount of time to wait
                      for a server's response headers after fully writing the request
                      (including its body, if any).
                    x-kubernetes-int-or-string: true
                type: object
              insecureSkipVerify:
# REDACTED: Sensitive content removed
                type: boolean
              maxIdleConnsPerHost:
                description: MaxIdleConnsPerHost controls the maximum idle (keep-alive)
                  to keep per-host.
                type: integer
              peerCertURI:
                description: PeerCertURI defines the peer cert URI used to match against
# REDACTED: Sensitive content removed
                type: string
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                items:
                  type: string
                type: array
              serverName:
                description: ServerName defines the server name used to contact the
                  server.
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/middlewares.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: middlewares.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: Middleware
    listKind: MiddlewareList
    plural: middlewares
    singular: middleware
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Middleware is the CRD implementation of a Traefik Middleware.
          More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/overview/'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MiddlewareSpec defines the desired state of a Middleware.
            properties:
              addPrefix:
                description: 'AddPrefix holds the add prefix middleware configuration.
                  This middleware updates the path of a request before forwarding
                  it. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/addprefix/'
                properties:
                  prefix:
                    description: Prefix is the string to add before the current path
                      in the requested URL. It should include a leading slash (/).
                    type: string
                type: object
              basicAuth:
                description: 'BasicAuth holds the basic auth middleware configuration.
                  This middleware restricts access to your services to known users.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/basicauth/'
                properties:
                  headerField:
                    description: 'HeaderField defines a header field to store the
                      authenticated user. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/basicauth/#headerfield'
                    type: string
                  realm:
                    description: 'Realm allows the protected resources on a server
                      to be partitioned into a set of protection spaces, each with
                      its own authentication scheme. Default: traefik.'
                    type: string
                  removeHeader:
                    description: 'RemoveHeader sets the removeHeader option to true
                      to remove the authorization header before forwarding the request
                      to your service. Default: false.'
                    type: boolean
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                      containing user credentials.
                    type: string
                type: object
              buffering:
                description: 'Buffering holds the buffering middleware configuration.
                  This middleware retries or limits the size of requests that can
                  be forwarded to backends. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/buffering/#maxrequestbodybytes'
                properties:
                  maxRequestBodyBytes:
                    description: 'MaxRequestBodyBytes defines the maximum allowed
                      body size for the request (in bytes). If the request exceeds
                      the allowed size, it is not forwarded to the service, and the
                      client gets a 413 (Request Entity Too Large) response. Default:
                      0 (no maximum).'
                    format: int64
                    type: integer
                  maxResponseBodyBytes:
                    description: 'MaxResponseBodyBytes defines the maximum allowed
                      response size from the service (in bytes). If the response exceeds
                      the allowed size, it is not forwarded to the client. The client
                      gets a 500 (Internal Server Error) response instead. Default:
                      0 (no maximum).'
                    format: int64
                    type: integer
                  memRequestBodyBytes:
                    description: 'MemRequestBodyBytes defines the threshold (in bytes)
                      from which the request will be buffered on disk instead of in
                      memory. Default: 1048576 (1Mi).'
                    format: int64
                    type: integer
                  memResponseBodyBytes:
                    description: 'MemResponseBodyBytes defines the threshold (in bytes)
                      from which the response will be buffered on disk instead of
                      in memory. Default: 1048576 (1Mi).'
                    format: int64
                    type: integer
                  retryExpression:
                    description: 'RetryExpression defines the retry conditions. It
                      is a logical combination of functions with operators AND (&&)
                      and OR (||). More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/buffering/#retryexpression'
                    type: string
                type: object
              chain:
                description: 'Chain holds the configuration of the chain middleware.
                  This middleware enables to define reusable combinations of other
                  pieces of middleware. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/chain/'
                properties:
                  middlewares:
                    description: Middlewares is the list of MiddlewareRef which composes
                      the chain.
                    items:
                      description: MiddlewareRef is a reference to a Middleware resource.
                      properties:
                        name:
                          description: Name defines the name of the referenced Middleware
                            resource.
                          type: string
                        namespace:
                          description: Namespace defines the namespace of the referenced
                            Middleware resource.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              circuitBreaker:
                description: CircuitBreaker holds the circuit breaker configuration.
                properties:
                  checkPeriod:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CheckPeriod is the interval between successive checks
                      of the circuit breaker condition (when in standby state).
                    x-kubernetes-int-or-string: true
                  expression:
                    description: Expression is the condition that triggers the tripped
                      state.
                    type: string
                  fallbackDuration:
                    anyOf:
                    - type: integer
                    - type: string
                    description: FallbackDuration is the duration for which the circuit
                      breaker will wait before trying to recover (from a tripped state).
                    x-kubernetes-int-or-string: true
                  recoveryDuration:
                    anyOf:
                    - type: integer
                    - type: string
                    description: RecoveryDuration is the duration for which the circuit
                      breaker will try to recover (as soon as it is in recovering
                      state).
                    x-kubernetes-int-or-string: true
                type: object
              compress:
                description: 'Compress holds the compress middleware configuration.
                  This middleware compresses responses before sending them to the
                  client, using gzip compression. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/compress/'
                properties:
                  excludedContentTypes:
                    description: ExcludedContentTypes defines the list of content
                      types to compare the Content-Type header of the incoming requests
                      and responses before compressing.
                    items:
                      type: string
                    type: array
                  minResponseBodyBytes:
                    description: 'MinResponseBodyBytes defines the minimum amount
                      of bytes a response body must have to be compressed. Default:
                      1024.'
                    type: integer
                type: object
              contentType:
                description: ContentType holds the content-type middleware configuration.
                  This middleware exists to enable the correct behavior until at least
                  the default one can be changed in a future version.
                properties:
                  autoDetect:
                    description: AutoDetect specifies whether to let the `Content-Type`
                      header, if it has not been set by the backend, be automatically
                      set to a value derived from the contents of the response. As
                      a proxy, the default behavior should be to leave the header
                      alone, regardless of what the backend did with it. However,
                      the historic default was to always auto-detect and set the header
                      if it was nil, and it is going to be kept that way in order
                      to support users currently relying on it.
                    type: boolean
                type: object
              digestAuth:
                description: 'DigestAuth holds the digest auth middleware configuration.
                  This middleware restricts access to your services to known users.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/digestauth/'
                properties:
                  headerField:
                    description: 'HeaderField defines a header field to store the
                      authenticated user. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/basicauth/#headerfield'
                    type: string
                  realm:
                    description: 'Realm allows the protected resources on a server
                      to be partitioned into a set of protection spaces, each with
                      its own authentication scheme. Default: traefik.'
                    type: string
                  removeHeader:
                    description: RemoveHeader defines whether to remove the authorization
                      header before forwarding the request to the backend.
                    type: boolean
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                      containing user credentials.
                    type: string
                type: object
              errors:
                description: 'ErrorPage holds the custom error middleware configuration.
                  This middleware returns a custom page in lieu of the default, according
                  to configured ranges of HTTP Status codes. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/errorpages/'
                properties:
                  query:
                    description: Query defines the URL for the error page (hosted
                      by service). The {status} variable can be used in order to insert
                      the status code in the URL.
                    type: string
                  service:
                    description: 'Service defines the reference to a Kubernetes Service
                      that will serve the error page. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/errorpages/#service'
                    properties:
                      kind:
                        description: Kind defines the kind of the Service.
                        enum:
                        - Service
                        - TraefikService
                        type: string
                      name:
                        description: Name defines the name of the referenced Kubernetes
                          Service or TraefikService. The differentiation between the
                          two is specified in the Kind field.
                        type: string
                      namespace:
                        description: Namespace defines the namespace of the referenced
                          Kubernetes Service or TraefikService.
                        type: string
                      passHostHeader:
                        description: PassHostHeader defines whether the client Host
                          header is forwarded to the upstream Kubernetes Service.
                          By default, passHostHeader is true.
                        type: boolean
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Port defines the port of a Kubernetes Service.
                          This can be a reference to a named port.
                        x-kubernetes-int-or-string: true
                      responseForwarding:
                        description: ResponseForwarding defines how Traefik forwards
                          the response from the upstream Kubernetes Service to the
                          client.
                        properties:
                          flushInterval:
                            description: 'FlushInterval defines the interval, in milliseconds,
                              in between flushes to the client while copying the response
                              body. A negative value means to flush immediately after
                              each write to the client. This configuration is ignored
                              when ReverseProxy recognizes a response as a streaming
                              response; for such responses, writes are flushed to
                              the client immediately. Default: 100ms'
                            type: string
                        type: object
                      scheme:
                        description: Scheme defines the scheme to use for the request
                          to the upstream Kubernetes Service. It defaults to https
                          when Kubernetes Service port is 443, http otherwise.
                        type: string
                      serversTransport:
                        description: ServersTransport defines the name of ServersTransport
                          resource to use. It allows to configure the transport between
                          Traefik and your servers. Can only be used on a Kubernetes
                          Service.
                        type: string
                      sticky:
                        description: 'Sticky defines the sticky sessions configuration.
                          More info: https://doc.traefik.io/traefik/v2.8/routing/services/#sticky-sessions'
                        properties:
                          cookie:
                            description: Cookie defines the sticky cookie configuration.
                            properties:
                              httpOnly:
                                description: HTTPOnly defines whether the cookie can
                                  be accessed by client-side APIs, such as JavaScript.
                                type: boolean
                              name:
                                description: Name defines the Cookie name.
                                type: string
                              sameSite:
                                description: 'SameSite defines the same site policy.
                                  More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                                type: string
                              secure:
                                description: Secure defines whether the cookie can
                                  only be transmitted over an encrypted connection
                                  (i.e. HTTPS).
                                type: boolean
                            type: object
                        type: object
                      strategy:
                        description: Strategy defines the load balancing strategy
                          between the servers. RoundRobin is the only supported value
                          at the moment.
                        type: string
                      weight:
                        description: Weight defines the weight and should only be
                          specified when Name references a TraefikService object (and
                          to be precise, one that embeds a Weighted Round Robin).
                        type: integer
                    required:
                    - name
                    type: object
                  status:
                    description: Status defines which status or range of statuses
                      should result in an error page. It can be either a status code
                      as a number (500), as multiple comma-separated numbers (500,502),
                      as ranges by separating two codes with a dash (500-599), or
                      a combination of the two (404,418,500-599).
                    items:
                      type: string
                    type: array
                type: object
              forwardAuth:
                description: 'ForwardAuth holds the forward auth middleware configuration.
                  This middleware delegates the request authentication to a Service.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/forwardauth/'
                properties:
                  address:
                    description: Address defines the authentication server address.
                    type: string
                  authRequestHeaders:
                    description: AuthRequestHeaders defines the list of the headers
                      to copy from the request to the authentication server. If not
                      set or empty then all request headers are passed.
                    items:
                      type: string
                    type: array
                  authResponseHeaders:
                    description: AuthResponseHeaders defines the list of headers to
                      copy from the authentication server response and set on forwarded
                      request, replacing any existing conflicting headers.
                    items:
                      type: string
                    type: array
                  authResponseHeadersRegex:
                    description: 'AuthResponseHeadersRegex defines the regex to match
                      headers to copy from the authentication server response and
                      set on forwarded request, after stripping all headers that match
                      the regex. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/forwardauth/#authresponseheadersregex'
                    type: string
                  tls:
                    description: TLS defines the configuration used to secure the
                      connection to the authentication server.
                    properties:
                      caOptional:
                        type: boolean
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                        type: string
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                        type: string
                      insecureSkipVerify:
                        description: InsecureSkipVerify defines whether the server
# REDACTED: Sensitive content removed
                        type: boolean
                    type: object
                  trustForwardHeader:
                    description: 'TrustForwardHeader defines whether to trust (ie:
                      forward) all X-Forwarded-* headers.'
                    type: boolean
                type: object
              headers:
                description: 'Headers holds the headers middleware configuration.
                  This middleware manages the requests and responses headers. More
                  info: https://doc.traefik.io/traefik/v2.8/middlewares/http/headers/#customrequestheaders'
                properties:
                  accessControlAllowCredentials:
                    description: AccessControlAllowCredentials defines whether the
                      request can include user credentials.
                    type: boolean
                  accessControlAllowHeaders:
                    description: AccessControlAllowHeaders defines the Access-Control-Request-Headers
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  accessControlAllowMethods:
                    description: AccessControlAllowMethods defines the Access-Control-Request-Method
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  accessControlAllowOriginList:
                    description: AccessControlAllowOriginList is a list of allowable
                      origins. Can also be a wildcard origin "*".
                    items:
                      type: string
                    type: array
                  accessControlAllowOriginListRegex:
                    description: AccessControlAllowOriginListRegex is a list of allowable
                      origins written following the Regular Expression syntax (https://golang.org/pkg/regexp/).
                    items:
                      type: string
                    type: array
                  accessControlExposeHeaders:
                    description: AccessControlExposeHeaders defines the Access-Control-Expose-Headers
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  accessControlMaxAge:
                    description: AccessControlMaxAge defines the time that a preflight
                      request may be cached.
                    format: int64
                    type: integer
                  addVaryHeader:
                    description: AddVaryHeader defines whether the Vary header is
                      automatically added/updated when the AccessControlAllowOriginList
                      is set.
                    type: boolean
                  allowedHosts:
                    description: AllowedHosts defines the fully qualified list of
                      allowed domain names.
                    items:
                      type: string
                    type: array
                  browserXssFilter:
                    description: BrowserXSSFilter defines whether to add the X-XSS-Protection
                      header with the value 1; mode=block.
                    type: boolean
                  contentSecurityPolicy:
                    description: ContentSecurityPolicy defines the Content-Security-Policy
                      header value.
                    type: string
                  contentTypeNosniff:
                    description: ContentTypeNosniff defines whether to add the X-Content-Type-Options
                      header with the nosniff value.
                    type: boolean
                  customBrowserXSSValue:
                    description: CustomBrowserXSSValue defines the X-XSS-Protection
                      header value. This overrides the BrowserXssFilter option.
                    type: string
                  customFrameOptionsValue:
                    description: CustomFrameOptionsValue defines the X-Frame-Options
                      header value. This overrides the FrameDeny option.
                    type: string
                  customRequestHeaders:
                    additionalProperties:
                      type: string
                    description: CustomRequestHeaders defines the header names and
                      values to apply to the request.
                    type: object
                  customResponseHeaders:
                    additionalProperties:
                      type: string
                    description: CustomResponseHeaders defines the header names and
                      values to apply to the response.
                    type: object
                  featurePolicy:
                    description: 'Deprecated: use PermissionsPolicy instead.'
                    type: string
                  forceSTSHeader:
                    description: ForceSTSHeader defines whether to add the STS header
                      even when the connection is HTTP.
                    type: boolean
                  frameDeny:
                    description: FrameDeny defines whether to add the X-Frame-Options
                      header with the DENY value.
                    type: boolean
                  hostsProxyHeaders:
# REDACTED: Sensitive content removed
                      hold a proxied hostname value for the request.
                    items:
                      type: string
                    type: array
                  isDevelopment:
                    description: IsDevelopment defines whether to mitigate the unwanted
                      effects of the AllowedHosts, SSL, and STS options when developing.
                      Usually testing takes place using HTTP, not HTTPS, and on localhost,
                      not your production domain. If you would like your development
                      environment to mimic production with complete Host blocking,
                      SSL redirects, and STS headers, leave this as false.
                    type: boolean
                  permissionsPolicy:
                    description: PermissionsPolicy defines the Permissions-Policy
                      header value. This allows sites to control browser features.
                    type: string
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                    type: string
                  referrerPolicy:
                    description: ReferrerPolicy defines the Referrer-Policy header
                      value. This allows sites to control whether browsers forward
                      the Referer header to other sites.
                    type: string
                  sslForceHost:
                    description: 'Deprecated: use RedirectRegex instead.'
                    type: boolean
                  sslHost:
                    description: 'Deprecated: use RedirectRegex instead.'
                    type: string
                  sslProxyHeaders:
                    additionalProperties:
                      type: string
# REDACTED: Sensitive content removed
                      values that would indicate a valid HTTPS request. It can be
                      useful when using other proxies (example: "X-Forwarded-Proto":
                      "https").'
                    type: object
                  sslRedirect:
                    description: 'Deprecated: use EntryPoint redirection or RedirectScheme
                      instead.'
                    type: boolean
                  sslTemporaryRedirect:
                    description: 'Deprecated: use EntryPoint redirection or RedirectScheme
                      instead.'
                    type: boolean
                  stsIncludeSubdomains:
                    description: STSIncludeSubdomains defines whether the includeSubDomains
                      directive is appended to the Strict-Transport-Security header.
                    type: boolean
                  stsPreload:
                    description: STSPreload defines whether the preload flag is appended
                      to the Strict-Transport-Security header.
                    type: boolean
                  stsSeconds:
                    description: STSSeconds defines the max-age of the Strict-Transport-Security
                      header. If set to 0, the header is not set.
                    format: int64
                    type: integer
                type: object
              inFlightReq:
                description: 'InFlightReq holds the in-flight request middleware configuration.
                  This middleware limits the number of requests being processed and
                  served concurrently. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/inflightreq/'
                properties:
                  amount:
                    description: Amount defines the maximum amount of allowed simultaneous
                      in-flight request. The middleware responds with HTTP 429 Too
                      Many Requests if there are already amount requests in progress
                      (based on the same sourceCriterion strategy).
                    format: int64
                    type: integer
                  sourceCriterion:
                    description: 'SourceCriterion defines what criterion is used to
                      group requests as originating from a common source. If several
                      strategies are defined at the same time, an error will be raised.
                      If none are set, the default is to use the requestHost. More
                      info: https://doc.traefik.io/traefik/v2.8/middlewares/http/inflightreq/#sourcecriterion'
                    properties:
                      ipStrategy:
                        description: 'IPStrategy holds the IP strategy configuration
                          used by Traefik to determine the client IP. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/ipwhitelist/#ipstrategy'
                        properties:
                          depth:
                            description: Depth tells Traefik to use the X-Forwarded-For
                              header and take the IP located at the depth position
                              (starting from the right).
                            type: integer
                          excludedIPs:
                            description: ExcludedIPs configures Traefik to scan the
                              X-Forwarded-For header and select the first IP not in
                              the list.
                            items:
                              type: string
                            type: array
                        type: object
                      requestHeaderName:
                        description: RequestHeaderName defines the name of the header
                          used to group incoming requests.
                        type: string
                      requestHost:
                        description: RequestHost defines whether to consider the request
                          Host as the source.
                        type: boolean
                    type: object
                type: object
              ipWhiteList:
                description: 'IPWhiteList holds the IP whitelist middleware configuration.
                  This middleware accepts / refuses requests based on the client IP.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/ipwhitelist/'
                properties:
                  ipStrategy:
                    description: 'IPStrategy holds the IP strategy configuration used
                      by Traefik to determine the client IP. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/ipwhitelist/#ipstrategy'
                    properties:
                      depth:
                        description: Depth tells Traefik to use the X-Forwarded-For
                          header and take the IP located at the depth position (starting
                          from the right).
                        type: integer
                      excludedIPs:
                        description: ExcludedIPs configures Traefik to scan the X-Forwarded-For
                          header and select the first IP not in the list.
                        items:
                          type: string
                        type: array
                    type: object
                  sourceRange:
                    description: SourceRange defines the set of allowed IPs (or ranges
                      of allowed IPs by using CIDR notation).
                    items:
                      type: string
                    type: array
                type: object
              passTLSClientCert:
                description: 'PassTLSClientCert holds the pass TLS client cert middleware
                  configuration. This middleware adds the selected data from the passed
# REDACTED: Sensitive content removed
                properties:
                  info:
# REDACTED: Sensitive content removed
                      you want to add to the X-Forwarded-Tls-Client-Cert-Info header.
                    properties:
                      issuer:
# REDACTED: Sensitive content removed
                          details to add to the X-Forwarded-Tls-Client-Cert-Info header.
                        properties:
                          commonName:
                            description: CommonName defines whether to add the organizationalUnit
                              information into the issuer.
                            type: boolean
                          country:
                            description: Country defines whether to add the country
                              information into the issuer.
                            type: boolean
                          domainComponent:
                            description: DomainComponent defines whether to add the
                              domainComponent information into the issuer.
                            type: boolean
                          locality:
                            description: Locality defines whether to add the locality
                              information into the issuer.
                            type: boolean
                          organization:
                            description: Organization defines whether to add the organization
                              information into the issuer.
                            type: boolean
                          province:
                            description: Province defines whether to add the province
                              information into the issuer.
                            type: boolean
                          serialNumber:
                            description: SerialNumber defines whether to add the serialNumber
                              information into the issuer.
                            type: boolean
                        type: object
                      notAfter:
                        description: NotAfter defines whether to add the Not After
                          information from the Validity part.
                        type: boolean
                      notBefore:
                        description: NotBefore defines whether to add the Not Before
                          information from the Validity part.
                        type: boolean
                      sans:
                        description: Sans defines whether to add the Subject Alternative
                          Name information from the Subject Alternative Name part.
                        type: boolean
                      serialNumber:
                        description: SerialNumber defines whether to add the client
                          serialNumber information.
                        type: boolean
                      subject:
# REDACTED: Sensitive content removed
                          details to add to the X-Forwarded-Tls-Client-Cert-Info header.
                        properties:
                          commonName:
                            description: CommonName defines whether to add the organizationalUnit
                              information into the subject.
                            type: boolean
                          country:
                            description: Country defines whether to add the country
                              information into the subject.
                            type: boolean
                          domainComponent:
                            description: DomainComponent defines whether to add the
                              domainComponent information into the subject.
                            type: boolean
                          locality:
                            description: Locality defines whether to add the locality
                              information into the subject.
                            type: boolean
                          organization:
                            description: Organization defines whether to add the organization
                              information into the subject.
                            type: boolean
                          organizationalUnit:
                            description: OrganizationalUnit defines whether to add
                              the organizationalUnit information into the subject.
                            type: boolean
                          province:
                            description: Province defines whether to add the province
                              information into the subject.
                            type: boolean
                          serialNumber:
                            description: SerialNumber defines whether to add the serialNumber
                              information into the subject.
                            type: boolean
                        type: object
                    type: object
                  pem:
                    description: PEM sets the X-Forwarded-Tls-Client-Cert header with
# REDACTED: Sensitive content removed
                    type: boolean
                type: object
              plugin:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: 'Plugin defines the middleware plugin configuration.
                  More info: https://doc.traefik.io/traefik/plugins/'
                type: object
              rateLimit:
                description: 'RateLimit holds the rate limit configuration. This middleware
                  ensures that services will receive a fair amount of requests, and
                  allows one to define what fair is. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/ratelimit/'
                properties:
                  average:
                    description: Average is the maximum rate, by default in requests/s,
                      allowed for the given source. It defaults to 0, which means
                      no rate limiting. The rate is actually defined by dividing Average
                      by Period. So for a rate below 1req/s, one needs to define a
                      Period larger than a second.
                    format: int64
                    type: integer
                  burst:
                    description: Burst is the maximum number of requests allowed to
                      arrive in the same arbitrarily small period of time. It defaults
                      to 1.
                    format: int64
                    type: integer
                  period:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'Period, in combination with Average, defines the
                      actual maximum rate, such as: r = Average / Period. It defaults
                      to a second.'
                    x-kubernetes-int-or-string: true
                  sourceCriterion:
                    description: SourceCriterion defines what criterion is used to
                      group requests as originating from a common source. If several
                      strategies are defined at the same time, an error will be raised.
                      If none are set, the default is to use the request's remote
                      address field (as an ipStrategy).
                    properties:
                      ipStrategy:
                        description: 'IPStrategy holds the IP strategy configuration
                          used by Traefik to determine the client IP. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/ipwhitelist/#ipstrategy'
                        properties:
                          depth:
                            description: Depth tells Traefik to use the X-Forwarded-For
                              header and take the IP located at the depth position
                              (starting from the right).
                            type: integer
                          excludedIPs:
                            description: ExcludedIPs configures Traefik to scan the
                              X-Forwarded-For header and select the first IP not in
                              the list.
                            items:
                              type: string
                            type: array
                        type: object
                      requestHeaderName:
                        description: RequestHeaderName defines the name of the header
                          used to group incoming requests.
                        type: string
                      requestHost:
                        description: RequestHost defines whether to consider the request
                          Host as the source.
                        type: boolean
                    type: object
                type: object
              redirectRegex:
                description: 'RedirectRegex holds the redirect regex middleware configuration.
                  This middleware redirects a request using regex matching and replacement.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/redirectregex/#regex'
                properties:
                  permanent:
                    description: Permanent defines whether the redirection is permanent
                      (301).
                    type: boolean
                  regex:
                    description: Regex defines the regex used to match and capture
                      elements from the request URL.
                    type: string
                  replacement:
                    description: Replacement defines how to modify the URL to have
                      the new target URL.
                    type: string
                type: object
              redirectScheme:
                description: 'RedirectScheme holds the redirect scheme middleware
                  configuration. This middleware redirects requests from a scheme/port
                  to another. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/redirectscheme/'
                properties:
                  permanent:
                    description: Permanent defines whether the redirection is permanent
                      (301).
                    type: boolean
                  port:
                    description: Port defines the port of the new URL.
                    type: string
                  scheme:
                    description: Scheme defines the scheme of the new URL.
                    type: string
                type: object
              replacePath:
                description: 'ReplacePath holds the replace path middleware configuration.
                  This middleware replaces the path of the request URL and store the
                  original path in an X-Replaced-Path header. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/replacepath/'
                properties:
                  path:
                    description: Path defines the path to use as replacement in the
                      request URL.
                    type: string
                type: object
              replacePathRegex:
                description: 'ReplacePathRegex holds the replace path regex middleware
                  configuration. This middleware replaces the path of a URL using
                  regex matching and replacement. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/replacepathregex/'
                properties:
                  regex:
                    description: Regex defines the regular expression used to match
                      and capture the path from the request URL.
                    type: string
                  replacement:
                    description: Replacement defines the replacement path format,
                      which can include captured variables.
                    type: string
                type: object
              retry:
                description: 'Retry holds the retry middleware configuration. This
                  middleware reissues requests a given number of times to a backend
                  server if that server does not reply. As soon as the server answers,
                  the middleware stops retrying, regardless of the response status.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/retry/'
                properties:
                  attempts:
                    description: Attempts defines how many times the request should
                      be retried.
                    type: integer
                  initialInterval:
                    anyOf:
                    - type: integer
                    - type: string
                    description: InitialInterval defines the first wait time in the
                      exponential backoff series. The maximum interval is calculated
                      as twice the initialInterval. If unspecified, requests will
                      be retried immediately. The value of initialInterval should
                      be provided in seconds or as a valid duration format, see https://pkg.go.dev/time#ParseDuration.
                    x-kubernetes-int-or-string: true
                type: object
              stripPrefix:
                description: 'StripPrefix holds the strip prefix middleware configuration.
                  This middleware removes the specified prefixes from the URL path.
                  More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/stripprefix/'
                properties:
                  forceSlash:
                    description: 'ForceSlash ensures that the resulting stripped path
                      is not the empty string, by replacing it with / when necessary.
                      Default: true.'
                    type: boolean
                  prefixes:
                    description: Prefixes defines the prefixes to strip from the request
                      URL.
                    items:
                      type: string
                    type: array
                type: object
              stripPrefixRegex:
                description: 'StripPrefixRegex holds the strip prefix regex middleware
                  configuration. This middleware removes the matching prefixes from
                  the URL path. More info: https://doc.traefik.io/traefik/v2.8/middlewares/http/stripprefixregex/'
                properties:
                  regex:
                    description: Regex defines the regular expression to match the
                      path prefix from the request URL.
                    items:
                      type: string
                    type: array
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/tlsstores.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: tlsstores.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TLSStore
    listKind: TLSStoreList
    plural: tlsstores
    singular: tlsstore
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'TLSStore is the CRD implementation of a Traefik TLS Store. For
          the time being, only the TLSStore named default is supported. This means
          that you cannot have two stores that are named default in different Kubernetes
# REDACTED: Sensitive content removed
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TLSStoreSpec defines the desired state of a TLSStore.
            properties:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                items:
# REDACTED: Sensitive content removed
                  properties:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                      type: string
                  required:
# REDACTED: Sensitive content removed
                  type: object
                type: array
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                properties:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                    type: string
                required:
# REDACTED: Sensitive content removed
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/ingressroute.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: ingressroutes.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRoute
    listKind: IngressRouteList
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressRoute is the CRD implementation of a Traefik HTTP Router.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressRouteSpec defines the desired state of IngressRoute.
            properties:
              entryPoints:
                description: 'EntryPoints defines the list of entry point names to
                  bind to. Entry points have to be configured in the static configuration.
                  More info: https://doc.traefik.io/traefik/v2.8/routing/entrypoints/
                  Default: all.'
                items:
                  type: string
                type: array
              routes:
                description: Routes defines the list of routes.
                items:
                  description: Route holds the HTTP route configuration.
                  properties:
                    kind:
                      description: Kind defines the kind of the route. Rule is the
                        only supported kind.
                      enum:
                      - Rule
                      type: string
                    match:
                      description: 'Match defines the router''s rule. More info: https://doc.traefik.io/traefik/v2.8/routing/routers/#rule'
                      type: string
                    middlewares:
                      description: 'Middlewares defines the list of references to
                        Middleware resources. More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-middleware'
                      items:
                        description: MiddlewareRef is a reference to a Middleware
                          resource.
                        properties:
                          name:
                            description: Name defines the name of the referenced Middleware
                              resource.
                            type: string
                          namespace:
                            description: Namespace defines the namespace of the referenced
                              Middleware resource.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    priority:
                      description: 'Priority defines the router''s priority. More
                        info: https://doc.traefik.io/traefik/v2.8/routing/routers/#priority'
                      type: integer
                    services:
                      description: Services defines the list of Service. It can contain
                        any combination of TraefikService and/or reference to a Kubernetes
                        Service.
                      items:
                        description: Service defines an upstream HTTP service to proxy
                          traffic to.
                        properties:
                          kind:
                            description: Kind defines the kind of the Service.
                            enum:
                            - Service
                            - TraefikService
                            type: string
                          name:
                            description: Name defines the name of the referenced Kubernetes
                              Service or TraefikService. The differentiation between
                              the two is specified in the Kind field.
                            type: string
                          namespace:
                            description: Namespace defines the namespace of the referenced
                              Kubernetes Service or TraefikService.
                            type: string
                          passHostHeader:
                            description: PassHostHeader defines whether the client
                              Host header is forwarded to the upstream Kubernetes
                              Service. By default, passHostHeader is true.
                            type: boolean
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Port defines the port of a Kubernetes Service.
                              This can be a reference to a named port.
                            x-kubernetes-int-or-string: true
                          responseForwarding:
                            description: ResponseForwarding defines how Traefik forwards
                              the response from the upstream Kubernetes Service to
                              the client.
                            properties:
                              flushInterval:
                                description: 'FlushInterval defines the interval,
                                  in milliseconds, in between flushes to the client
                                  while copying the response body. A negative value
                                  means to flush immediately after each write to the
                                  client. This configuration is ignored when ReverseProxy
                                  recognizes a response as a streaming response; for
                                  such responses, writes are flushed to the client
                                  immediately. Default: 100ms'
                                type: string
                            type: object
                          scheme:
                            description: Scheme defines the scheme to use for the
                              request to the upstream Kubernetes Service. It defaults
                              to https when Kubernetes Service port is 443, http otherwise.
                            type: string
                          serversTransport:
                            description: ServersTransport defines the name of ServersTransport
                              resource to use. It allows to configure the transport
                              between Traefik and your servers. Can only be used on
                              a Kubernetes Service.
                            type: string
                          sticky:
                            description: 'Sticky defines the sticky sessions configuration.
                              More info: https://doc.traefik.io/traefik/v2.8/routing/services/#sticky-sessions'
                            properties:
                              cookie:
                                description: Cookie defines the sticky cookie configuration.
                                properties:
                                  httpOnly:
                                    description: HTTPOnly defines whether the cookie
                                      can be accessed by client-side APIs, such as
                                      JavaScript.
                                    type: boolean
                                  name:
                                    description: Name defines the Cookie name.
                                    type: string
                                  sameSite:
                                    description: 'SameSite defines the same site policy.
                                      More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite'
                                    type: string
                                  secure:
                                    description: Secure defines whether the cookie
                                      can only be transmitted over an encrypted connection
                                      (i.e. HTTPS).
                                    type: boolean
                                type: object
                            type: object
                          strategy:
                            description: Strategy defines the load balancing strategy
                              between the servers. RoundRobin is the only supported
                              value at the moment.
                            type: string
                          weight:
                            description: Weight defines the weight and should only
                              be specified when Name references a TraefikService object
                              (and to be precise, one that embeds a Weighted Round
                              Robin).
                            type: integer
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - kind
                  - match
                  type: object
                type: array
              tls:
                description: 'TLS defines the TLS configuration. More info: https://doc.traefik.io/traefik/v2.8/routing/routers/#tls'
                properties:
                  certResolver:
# REDACTED: Sensitive content removed
                      resolver to use. Cert resolvers have to be configured in the
# REDACTED: Sensitive content removed
                    type: string
                  domains:
                    description: 'Domains defines the list of domains that will be
# REDACTED: Sensitive content removed
                    items:
                      description: Domain holds a domain name with SANs.
                      properties:
                        main:
                          description: Main defines the main domain name.
                          type: string
                        sans:
                          description: SANs defines the subject alternative domain
                            names.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  options:
                    description: 'Options defines the reference to a TLSOption, that
                      specifies the parameters of the TLS connection. If not defined,
                      the `default` TLSOption is used. More info: https://doc.traefik.io/traefik/v2.8/https/tls/#tls-options'
                    properties:
                      name:
                        description: 'Name defines the name of the referenced TLSOption.
                          More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-tlsoption'
                        type: string
                      namespace:
                        description: 'Namespace defines the namespace of the referenced
                          TLSOption. More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-tlsoption'
                        type: string
                    required:
                    - name
                    type: object
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                    type: string
                  store:
                    description: Store defines the reference to the TLSStore, that
# REDACTED: Sensitive content removed
                      TLSStore can be used.
                    properties:
                      name:
                        description: 'Name defines the name of the referenced TLSStore.
                          More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-tlsstore'
                        type: string
                      namespace:
                        description: 'Namespace defines the namespace of the referenced
                          TLSStore. More info: https://doc.traefik.io/traefik/v2.8/routing/providers/kubernetes-crd/#kind-tlsstore'
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - routes
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/ingressroutetcp.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: ingressroutetcps.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRouteTCP
    listKind: IngressRouteTCPList
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressRouteTCP is the CRD implementation of a Traefik TCP Router.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressRouteTCPSpec defines the desired state of IngressRouteTCP.
            properties:
              entryPoints:
                description: 'EntryPoints defines the list of entry point names to
                  bind to. Entry points have to be configured in the static configuration.
                  More info: https://doc.traefik.io/traefik/v2.8/routing/entrypoints/
                  Default: all.'
                items:
                  type: string
                type: array
              routes:
                description: Routes defines the list of routes.
                items:
                  description: RouteTCP holds the TCP route configuration.
                  properties:
                    match:
                      description: 'Match defines the router''s rule. More info: https://doc.traefik.io/traefik/v2.8/routing/routers/#rule_1'
                      type: string
                    middlewares:
                      description: Middlewares defines the list of references to MiddlewareTCP
                        resources.
                      items:
                        description: ObjectReference is a generic reference to a Traefik
                          resource.
                        properties:
                          name:
                            description: Name defines the name of the referenced Traefik
                              resource.
                            type: string
                          namespace:
                            description: Namespace defines the namespace of the referenced
                              Traefik resource.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    priority:
                      description: 'Priority defines the router''s priority. More
                        info: https://doc.traefik.io/traefik/v2.8/routing/routers/#priority_1'
                      type: integer
                    services:
                      description: Services defines the list of TCP services.
                      items:
                        description: ServiceTCP defines an upstream TCP service to
                          proxy traffic to.
                        properties:
                          name:
                            description: Name defines the name of the referenced Kubernetes
                              Service.
                            type: string
                          namespace:
                            description: Namespace defines the namespace of the referenced
                              Kubernetes Service.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Port defines the port of a Kubernetes Service.
                              This can be a reference to a named port.
                            x-kubernetes-int-or-string: true
                          proxyProtocol:
                            description: 'ProxyProtocol defines the PROXY protocol
                              configuration. More info: https://doc.traefik.io/traefik/v2.8/routing/services/#proxy-protocol'
                            properties:
                              version:
                                description: Version defines the PROXY Protocol version
                                  to use.
                                type: integer
                            type: object
                          terminationDelay:
                            description: TerminationDelay defines the deadline that
                              the proxy sets, after one of its connected peers indicates
                              it has closed the writing capability of its connection,
                              to close the reading capability as well, hence fully
                              terminating the connection. It is a duration in milliseconds,
                              defaulting to 100. A negative value means an infinite
                              deadline (i.e. the reading capability is never closed).
                            type: integer
                          weight:
                            description: Weight defines the weight used when balancing
                              requests between multiple Kubernetes Service.
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                  required:
                  - match
                  type: object
                type: array
              tls:
                description: 'TLS defines the TLS configuration on a layer 4 / TCP
                  Route. More info: https://doc.traefik.io/traefik/v2.8/routing/routers/#tls_1'
                properties:
                  certResolver:
# REDACTED: Sensitive content removed
                      resolver to use. Cert resolvers have to be configured in the
# REDACTED: Sensitive content removed
                    type: string
                  domains:
                    description: 'Domains defines the list of domains that will be
# REDACTED: Sensitive content removed
                    items:
                      description: Domain holds a domain name with SANs.
                      properties:
                        main:
                          description: Main defines the main domain name.
                          type: string
                        sans:
                          description: SANs defines the subject alternative domain
                            names.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  options:
                    description: 'Options defines the reference to a TLSOption, that
                      specifies the parameters of the TLS connection. If not defined,
                      the `default` TLSOption is used. More info: https://doc.traefik.io/traefik/v2.8/https/tls/#tls-options'
                    properties:
                      name:
                        description: Name defines the name of the referenced Traefik
                          resource.
                        type: string
                      namespace:
                        description: Namespace defines the namespace of the referenced
                          Traefik resource.
                        type: string
                    required:
                    - name
                    type: object
                  passthrough:
                    description: Passthrough defines whether a TLS router will terminate
                      the TLS connection.
                    type: boolean
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                    type: string
                  store:
                    description: Store defines the reference to the TLSStore, that
# REDACTED: Sensitive content removed
                      TLSStore can be used.
                    properties:
                      name:
                        description: Name defines the name of the referenced Traefik
                          resource.
                        type: string
                      namespace:
                        description: Namespace defines the namespace of the referenced
                          Traefik resource.
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - routes
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/tlsoptions.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: tlsoptions.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TLSOption
    listKind: TLSOptionList
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'TLSOption is the CRD implementation of a Traefik TLS Option,
          allowing to configure some parameters of the TLS connection. More info:
          https://doc.traefik.io/traefik/v2.8/https/tls/#tls-options'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TLSOptionSpec defines the desired state of a TLSOption.
            properties:
              alpnProtocols:
                description: 'ALPNProtocols defines the list of supported application
                  level protocols for the TLS handshake, in order of preference. More
                  info: https://doc.traefik.io/traefik/v2.8/https/tls/#alpn-protocols'
                items:
                  type: string
                type: array
              cipherSuites:
                description: 'CipherSuites defines the list of supported cipher suites
                  for TLS versions up to TLS 1.2. More info: https://doc.traefik.io/traefik/v2.8/https/tls/#cipher-suites'
                items:
                  type: string
                type: array
              clientAuth:
                description: ClientAuth defines the server's policy for TLS Client
                  Authentication.
                properties:
                  clientAuthType:
                    description: ClientAuthType defines the client authentication
                      type to apply.
                    enum:
                    - NoClientCert
                    - RequestClientCert
                    - RequireAnyClientCert
                    - VerifyClientCertIfGiven
                    - RequireAndVerifyClientCert
                    type: string
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
                    items:
                      type: string
                    type: array
                type: object
              curvePreferences:
                description: 'CurvePreferences defines the preferred elliptic curves
                  in a specific order. More info: https://doc.traefik.io/traefik/v2.8/https/tls/#curve-preferences'
                items:
                  type: string
                type: array
              maxVersion:
                description: 'MaxVersion defines the maximum TLS version that Traefik
                  will accept. Possible values: VersionTLS10, VersionTLS11, VersionTLS12,
                  VersionTLS13. Default: None.'
                type: string
              minVersion:
                description: 'MinVersion defines the minimum TLS version that Traefik
                  will accept. Possible values: VersionTLS10, VersionTLS11, VersionTLS12,
                  VersionTLS13. Default: VersionTLS10.'
                type: string
              preferServerCipherSuites:
                description: PreferServerCipherSuites defines whether the server chooses
                  a cipher suite among his own instead of among the client's. It is
                  enabled automatically when minVersion or maxVersion are set.
                type: boolean
              sniStrict:
                description: SniStrict defines whether Traefik allows connections
                  from clients connections that do not specify a server_name extension.
                type: boolean
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/middlewarestcp.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: middlewaretcps.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: MiddlewareTCP
    listKind: MiddlewareTCPList
    plural: middlewaretcps
    singular: middlewaretcp
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'MiddlewareTCP is the CRD implementation of a Traefik TCP middleware.
          More info: https://doc.traefik.io/traefik/v2.8/middlewares/overview/'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MiddlewareTCPSpec defines the desired state of a MiddlewareTCP.
            properties:
              inFlightConn:
                description: InFlightConn defines the InFlightConn middleware configuration.
                properties:
                  amount:
                    description: Amount defines the maximum amount of allowed simultaneous
                      connections. The middleware closes the connection if there are
                      already amount connections opened.
                    format: int64
                    type: integer
                type: object
              ipWhiteList:
                description: IPWhiteList defines the IPWhiteList middleware configuration.
                properties:
                  sourceRange:
                    description: SourceRange defines the allowed IPs (or ranges of
                      allowed IPs by using CIDR notation).
                    items:
                      type: string
                    type: array
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/crds/ingressrouteudp.yaml ===

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: ingressrouteudps.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRouteUDP
    listKind: IngressRouteUDPList
    plural: ingressrouteudps
    singular: ingressrouteudp
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressRouteUDP is a CRD implementation of a Traefik UDP Router.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressRouteUDPSpec defines the desired state of a IngressRouteUDP.
            properties:
              entryPoints:
                description: 'EntryPoints defines the list of entry point names to
                  bind to. Entry points have to be configured in the static configuration.
                  More info: https://doc.traefik.io/traefik/v2.8/routing/entrypoints/
                  Default: all.'
                items:
                  type: string
                type: array
              routes:
                description: Routes defines the list of routes.
                items:
                  description: RouteUDP holds the UDP route configuration.
                  properties:
                    services:
                      description: Services defines the list of UDP services.
                      items:
                        description: ServiceUDP defines an upstream UDP service to
                          proxy traffic to.
                        properties:
                          name:
                            description: Name defines the name of the referenced Kubernetes
                              Service.
                            type: string
                          namespace:
                            description: Namespace defines the namespace of the referenced
                              Kubernetes Service.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Port defines the port of a Kubernetes Service.
                              This can be a reference to a named port.
                            x-kubernetes-int-or-string: true
                          weight:
                            description: Weight defines the weight used when balancing
                              requests between multiple Kubernetes Service.
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                  type: object
                type: array
            required:
            - routes
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/service.yaml ===
{{- if .Values.service.enabled -}}

{{ $tcpPorts := dict }}
{{ $udpPorts := dict }}
{{- range $name, $config := .Values.ports }}
  {{- if or $config.http3 (eq (toString $config.protocol) "UDP") }}
    {{ $_ := set $udpPorts $name $config }}
  {{- end }}
  {{- if eq (toString (default "TCP" $config.protocol)) "TCP" }}
    {{ $_ := set $tcpPorts $name $config }}
  {{- end }}
{{- end }}

apiVersion: v1
kind: List
metadata:
  name: {{ template "traefik.fullname" . }}
items:
{{- if $tcpPorts }}
  - apiVersion: v1
    kind: Service
    metadata:
      name: {{ template "traefik.fullname" . }}
      labels:
        app.kubernetes.io/name: {{ template "traefik.name" . }}
        helm.sh/chart: {{ template "traefik.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.service.labels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with (merge .Values.service.annotationsTCP .Values.service.annotations) }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- $type := default "LoadBalancer" .Values.service.type }}
      type: {{ $type }}
      {{- with .Values.service.spec }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      selector:
        app.kubernetes.io/name: {{ template "traefik.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      ports:
      {{- range $name, $config := $tcpPorts }}
      {{- if $config.expose }}
      - port: {{ default $config.port $config.exposedPort }}
        name: {{ $name }}
        targetPort: {{ $name | quote }}
        protocol: TCP
        {{- if $config.nodePort }}
        nodePort: {{ $config.nodePort }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if eq $type "LoadBalancer" }}
      {{- with .Values.service.loadBalancerSourceRanges }}
      loadBalancerSourceRanges:
      {{- toYaml . | nindent 6 }}
      {{- end -}}
      {{- end -}}
      {{- with .Values.service.externalIPs }}
      externalIPs:
      {{- toYaml . | nindent 6 }}
      {{- end -}}
      {{- if .Values.service.ipFamilyPolicy }}
      ipFamilyPolicy: {{ .Values.service.ipFamilyPolicy }}
      {{- end }}
      {{- with .Values.service.ipFamilies }}
      ipFamilies: 
      {{- toYaml . | nindent 6 }}
      {{- end -}}
{{- end }}

{{- if $udpPorts }}
  - apiVersion: v1
    kind: Service
    metadata:
      name: {{ template "traefik.fullname" . }}-udp
      labels:
        app.kubernetes.io/name: {{ template "traefik.name" . }}
        helm.sh/chart: {{ template "traefik.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.service.labels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with (merge .Values.service.annotationsUDP .Values.service.annotations) }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- $type := default "LoadBalancer" .Values.service.type }}
      type: {{ $type }}
      {{- with .Values.service.spec }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      selector:
        app.kubernetes.io/name: {{ template "traefik.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      ports:
      {{- range $name, $config := $udpPorts }}
      {{- if $config.expose }}
      - port: {{ default $config.port $config.exposedPort }}
        name: {{ $name }}
        # Due to https://github.com/kubernetes/kubernetes/issues/58477 it is not possible
        # to define the HTTP/3 UDP port as a containerPort. TCP and UDP containerPort will have
        # the same value which will break the chart upgrade.
        targetPort: {{ if $config.http3 }}{{ $config.port }}{{ else }}{{ $name | quote }}{{ end }}
        protocol: UDP
        {{- if $config.nodePort }}
        nodePort: {{ $config.nodePort }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if eq $type "LoadBalancer" }}
      {{- with .Values.service.loadBalancerSourceRanges }}
      loadBalancerSourceRanges:
      {{- toYaml . | nindent 6 }}
      {{- end -}}
      {{- end -}}
      {{- with .Values.service.externalIPs }}
      externalIPs:
      {{- toYaml . | nindent 6 }}
      {{- end -}}
      {{- if .Values.service.ipFamilyPolicy }}
      ipFamilyPolicy: {{ .Values.service.ipFamilyPolicy }}
      {{- end }}
      {{- with .Values.service.ipFamilies }}
      ipFamilies: 
      {{- toYaml . | nindent 6 }}
      {{- end -}}
{{- end }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/ingressclass.yaml ===
{{- if and .Values.ingressClass.enabled (semverCompare ">=2.3.0" (default .Chart.AppVersion .Values.image.tag)) -}}
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/IngressClass" }}
apiVersion: networking.k8s.io/v1
  {{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/IngressClass" }}
apiVersion: networking.k8s.io/v1beta1
  {{- else if or (eq .Values.ingressClass.fallbackApiVersion "v1beta1") (eq .Values.ingressClass.fallbackApiVersion "v1") }}
apiVersion: {{ printf "networking.k8s.io/%s" .Values.ingressClass.fallbackApiVersion }}
  {{- else }}
    {{- fail "\n\n ERROR: You must have at least networking.k8s.io/v1beta1 to use ingressClass" }}
  {{- end }}
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: {{ .Values.ingressClass.isDefaultClass | quote }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: {{ template "traefik.fullname" . }}
spec:
  controller: traefik.io/ingress-controller
{{- end }}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/poddisruptionbudget.yaml ===
{{- if .Values.podDisruptionBudget.enabled -}}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "traefik.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/hpa.yaml ===
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ template "traefik.fullname" . }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
{{ toYaml .Values.autoscaling.metrics | indent 4 }}
{{- end }}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/tlsoption.yaml ===
{{- range $name, $config := .Values.tlsOptions }}
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" $ }}
    helm.sh/chart: {{ template "traefik.chart" $ }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  {{- toYaml $config | nindent 2 }}
---
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/gateway.yaml ===
{{- if .Values.experimental.kubernetesGateway.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: traefik-gateway
  namespace: {{ default .Release.Namespace .Values.experimental.kubernetesGateway.namespace }}
spec:
  gatewayClassName: traefik
  listeners:
    - name: web
      port: {{ .Values.ports.web.port }}
      protocol: HTTP

# REDACTED: Sensitive content removed
    - name: websecure
      port: {{ $.Values.ports.websecure.port }}
      protocol: HTTPS
      tls:
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    {{- end }}
{{- end }}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/gatewayclass.yaml ===
{{- if .Values.experimental.kubernetesGateway.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: traefik
spec:
  controllerName: traefik.io/gateway-controller
{{- end }}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/daemonset.yaml ===
{{- if and .Values.deployment.enabled (eq .Values.deployment.kind "DaemonSet") -}}
  {{- with .Values.additionalArguments -}}
    {{- range . -}}
      {{- if contains ".acme." . -}}
        {{- fail (printf "ACME functionality is not supported when running Traefik as a DaemonSet") -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- if eq (default .Chart.AppVersion .Values.image.tag) "latest" }}
    {{- fail "\n\n ERROR: latest tag should not be used" }}
  {{- end }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  {{- with .Values.deployment.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.deployment.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "traefik.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  {{- if .Values.deployment.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- end }}
  template: {{ template "traefik.podTemplate" . }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/dashboard-hook-ingressroute.yaml ===
{{- if .Values.ingressRoute.dashboard.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ template "traefik.fullname" . }}-dashboard
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    {{- with .Values.ingressRoute.dashboard.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- with .Values.ingressRoute.dashboard.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  entryPoints:
    - traefik
  routes:
  - match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    kind: Rule
    services:
    - name: api@internal
      kind: TraefikService
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/deployment.yaml ===
{{- if and .Values.deployment.enabled (eq .Values.deployment.kind "Deployment") -}}
  {{- if gt (int .Values.deployment.replicas) 1 -}}
    {{- with .Values.additionalArguments -}}
      {{- range . -}}
        {{- if contains ".acme." . -}}
          {{- fail (printf "You can not enable acme if you set more than one traefik replica") -}}
        {{- end -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- if eq (default .Chart.AppVersion .Values.image.tag) "latest" }}
    {{- fail "\n\n ERROR: latest tag should not be used" }}
  {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  {{- with .Values.deployment.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.deployment.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.deployment.replicas }}
  {{- end }}
  {{- if .Values.deployment.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "traefik.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.rollingUpdate }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  template: {{ template "traefik.podTemplate" . }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/pvc.yaml ===
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "traefik.fullname" . }}
  annotations:
  {{- with .Values.persistence.annotations  }}
  {{ toYaml . | nindent 4 }}
  {{- end }}
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.persistence.size | quote }}
  {{- if .Values.persistence.storageClass }}
  storageClassName: {{ .Values.persistence.storageClass | quote }}
  {{- end }}
{{- end -}}



=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/rolebinding.yaml ===
{{- if and .Values.rbac.enabled .Values.rbac.namespaced }}
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "traefik.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "traefik.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/podsecuritypolicy.yaml ===
{{- if .Values.podSecurityPolicy.enabled }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
{{- if not .Values.securityContext.runAsNonRoot }}
  allowedCapabilities:
    - NET_BIND_SERVICE
{{- end }}
  hostNetwork: {{ .Values.hostNetwork }}
  hostIPC: false
  hostPID: false
  fsGroup:
{{- if .Values.securityContext.runAsNonRoot }}
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
{{- else }}
    rule: RunAsAny
{{- end }}
{{- if .Values.hostNetwork }}
  hostPorts:
  - max: 65535
    min: 1
{{- end }}
  readOnlyRootFilesystem: true
  runAsUser:
{{- if .Values.securityContext.runAsNonRoot }}
    rule: MustRunAsNonRoot
{{- else }}
    rule: RunAsAny
{{- end }}
  seLinux:
    rule: RunAsAny
  supplementalGroups:
{{- if .Values.securityContext.runAsNonRoot }}
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
{{- else }}
    rule: RunAsAny
{{- end }}
  volumes:
  - configMap
  - downwardAPI
# REDACTED: Sensitive content removed
  - emptyDir
  - projected
{{- if .Values.persistence.enabled }}
  - persistentVolumeClaim
{{- end -}}
{{- end -}}

=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/clusterrole.yaml ===
{{- if and .Values.rbac.enabled (not .Values.rbac.namespaced) -}}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
# REDACTED: Sensitive content removed
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - middlewaretcps
      - tlsoptions
      - tlsstores
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
{{- if .Values.podSecurityPolicy.enabled }}
  - apiGroups:
      - policy
    resourceNames:
      - {{ template "traefik.fullname" . }}
    resources:
      - podsecuritypolicies
    verbs:
      - use
{{- end -}}
{{- if .Values.experimental.kubernetesGateway.enabled }}
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - httproutes
      - tcproutes
      - tlsroutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
      - tcproutes/status
      - tlsroutes/status
    verbs:
      - update
{{- end -}}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/role.yaml ===
{{- if and .Values.rbac.enabled .Values.rbac.namespaced }}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
# REDACTED: Sensitive content removed
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - middlewaretcps
      - tlsoptions
      - tlsstores
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
{{- if .Values.podSecurityPolicy.enabled }}
  - apiGroups:
      - extensions
    resourceNames:
      - {{ template "traefik.fullname" . }}
    resources:
      - podsecuritypolicies
    verbs:
      - use
{{- end -}}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/serviceaccount.yaml ===
{{- if not .Values.serviceAccount.name -}}
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{ include "traefik.serviceAccountName" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
  {{- with .Values.serviceAccountAnnotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end -}}


=== File: helm/traefik/charts/traefik-10.24.0/traefik/templates/rbac/clusterrolebinding.yaml ===
{{- if and .Values.rbac.enabled (not .Values.rbac.namespaced) }}
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "traefik.name" . }}
    helm.sh/chart: {{ template "traefik.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "traefik.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "traefik.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end -}}


=== File: helm/logstash/values.yaml ===
# helm/logstash-values.yaml
image:
  repository: "logstash"
  tag: "7.17.3"

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "2"
    memory: "4Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "10Gi"

# Network settings
service:
  type: ClusterIP
  ports:
    - name: http
      port: 5044
      protocol: TCP

# Security settings
securityContext:
  runAsUser: 1000
  fsGroup: 1000

# Logstash configuration
logstashConfig:
  logstash.yml: |
    path.data: /usr/share/logstash/data
    path.logs: /var/log/logstash
    node.name: nextjs-market-logstash
    pipeline.workers: 8
    pipeline.batch.size: 1000
    pipeline.batch.delay: 50
    queue.type: persisted
    queue.max_bytes: 3gb
    log.level: debug

  pipelines.yml: |
    - pipeline.id: main
      path.config: "/usr/share/logstash/pipeline/*.conf"

# JVM options
logstashJavaOpts: "-Xms2g -Xmx2g"

# Pipeline configuration
logstashPipeline:
  nextjs-market.conf: |
    input {
      http {
        host => "0.0.0.0"
        port => 5044
        codec => json
        
        response_headers => {
          "Content-Type" => "application/json"
          "Access-Control-Allow-Origin" => "*"
          "Access-Control-Allow-Methods" => "POST, OPTIONS"
          "Access-Control-Allow-Headers" => "Content-Type"
        }
      }
    }

    filter {
      mutate {
        add_field => {
          "received_at" => "%{@timestamp}"
          "environment" => "${ENVIRONMENT}"
          "service" => "nextjs-market"
          "log_type" => "application"
        }
# REDACTED: Sensitive content removed
      }
    }

    output {
      elasticsearch {
        hosts => ["${ES_HOSTS}"]
        user => "${ES_USER}"
# REDACTED: Sensitive content removed
        index => "nextjs-market-${ENVIRONMENT}-%{+YYYY.MM.dd}"
        ssl_verification_mode => "none"
        timeout => 120
        retry_on_conflict => 5
        retry_max_interval => 30
        retry_initial_interval => 2
      }
      
      file {
        path => "/var/log/logstash/nextjs-market-debug.log"
        codec => json_lines
        flush_interval => 60
      }
    }

# Environment variables
extraEnvs:
  - name: ES_HOSTS
    value: "https://elasticsearch-master:9200"
  - name: ES_USER
    valueFrom:
# REDACTED: Sensitive content removed
        name: logstash-credentials
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: logstash-credentials
# REDACTED: Sensitive content removed
  - name: ENVIRONMENT
    value: "production"


=== File: helm/logstash/Chart.yaml ===
apiVersion: v2
name: logstash
description: Logstash Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: logstash
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: helm/kibana/values.yaml ===
# helm/kibana-values.yaml
image:
  repository: "kibana"
  tag: "7.17.3"

elasticsearchHosts: "http://elasticsearch-master:9200"

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "5Gi"

# Network settings
service:
  type: ClusterIP
  port: 5601

# Security settings
securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000

# Kibana configuration
kibanaConfig:
  kibana.yml: |
    server.host: "0.0.0.0"
    server.publicBaseUrl: "https://kibana.1xmr.com"
    elasticsearch.username: "kibana_admin"
# REDACTED: Sensitive content removed
    elasticsearch.ssl.verificationMode: none
# REDACTED: Sensitive content removed
    logging:
      appenders:
        file:
          type: file
          fileName: /var/log/kibana/kibana.log
          layout:
            type: json
      root:
        appenders:
          - default
          - file
    pid.file: /run/kibana/kibana.pid

# REDACTED: Sensitive content removed
extraEnvs:
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: kibana-credentials
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: kibana-credentials
# REDACTED: Sensitive content removed


=== File: helm/kibana/Chart.yaml ===
apiVersion: v2
name: kibana
description: Kibana Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: kibana
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: .github/workflows/build-images.yml ===


