Directory Structure:
elk-stack-repo/
│   ├── cloudflare-secret.yaml
│   ├── elasticsearch-git.yaml
│   ├── elk-ingress-routes.yaml
│   ├── logstash-git.yaml
argocd/
│   ├── setup/
│   ├── │   ├── argocd-installation.yaml
│   ├── applications/
│   ├── │   ├── logstash.yaml
│   ├── │   ├── metallb.yaml
│   ├── │   ├── elasticsearch.yaml
│   ├── │   ├── kibana.yaml
│   ├── │   ├── metallb-config.yaml
.git/
│   ├── logs/
│   │   ├── refs/
│   │   │   ├── heads/
│   │   │   ├── remotes/
│   │   │   │   ├── origin/
│   ├── hooks/
│   ├── info/
│   ├── objects/
│   │   ├── 7a/
│   │   ├── e1/
│   │   ├── ab/
│   │   ├── 25/
│   │   ├── 64/
│   │   ├── 3c/
│   │   ├── aa/
│   │   ├── 32/
│   │   ├── 8b/
│   │   ├── pack/
│   │   ├── b3/
│   │   ├── ff/
│   │   ├── 47/
│   │   ├── ca/
│   │   ├── db/
│   │   ├── fe/
│   │   ├── 88/
│   │   ├── 79/
│   │   ├── 20/
│   │   ├── 17/
│   │   ├── 8d/
│   │   ├── 05/
│   │   ├── 49/
│   │   ├── 0a/
│   │   ├── 22/
│   │   ├── e2/
│   │   ├── 0e/
│   │   ├── 24/
│   │   ├── 6e/
│   │   ├── 8c/
│   │   ├── 2c/
│   │   ├── ef/
│   │   ├── 97/
│   │   ├── 53/
│   │   ├── 3b/
│   │   ├── d7/
│   │   ├── 03/
│   │   ├── 82/
│   │   ├── b8/
│   │   ├── 11/
│   │   ├── d6/
│   │   ├── f8/
│   │   ├── 42/
│   │   ├── 6c/
│   │   ├── 10/
│   │   ├── 39/
│   │   ├── 38/
│   │   ├── 14/
│   │   ├── 84/
│   │   ├── a7/
│   │   ├── 81/
│   │   ├── 75/
│   │   ├── 96/
│   │   ├── cd/
│   │   ├── 58/
│   │   ├── 91/
│   │   ├── 9c/
│   │   ├── 60/
│   │   ├── 34/
│   │   ├── f9/
│   │   ├── ac/
│   │   ├── 9f/
│   │   ├── b9/
│   │   ├── 93/
│   │   ├── 36/
│   │   ├── 0c/
│   │   ├── a1/
│   │   ├── 3a/
│   │   ├── e6/
│   │   ├── 94/
│   │   ├── 55/
│   │   ├── 16/
│   │   ├── 51/
│   │   ├── 78/
│   │   ├── d2/
│   │   ├── 5e/
│   │   ├── 92/
│   │   ├── b2/
│   │   ├── e4/
│   │   ├── 15/
│   │   ├── 09/
│   │   ├── 9a/
│   │   ├── d4/
│   │   ├── c7/
│   │   ├── 62/
│   │   ├── 66/
│   │   ├── a3/
│   │   ├── 5a/
│   │   ├── 90/
│   │   ├── d5/
│   │   ├── b0/
│   │   ├── f6/
│   │   ├── da/
│   │   ├── 01/
│   │   ├── fd/
│   │   ├── 07/
│   │   ├── 41/
│   │   ├── 3f/
│   │   ├── bf/
│   │   ├── 68/
│   │   ├── 27/
│   │   ├── c4/
│   │   ├── ed/
│   │   ├── 2a/
│   │   ├── e5/
│   │   ├── 3d/
│   │   ├── 35/
│   │   ├── ae/
│   │   ├── 4b/
│   │   ├── 98/
│   │   ├── bc/
│   │   ├── a2/
│   │   ├── 02/
│   │   ├── 8e/
│   │   ├── 5f/
│   │   ├── e0/
│   │   ├── 7c/
│   │   ├── c3/
│   │   ├── 50/
│   │   ├── f1/
│   │   ├── 9e/
│   │   ├── 13/
│   │   ├── bb/
│   │   ├── c8/
│   │   ├── ba/
│   │   ├── 08/
│   │   ├── 2b/
│   │   ├── e3/
│   │   ├── 4a/
│   │   ├── 30/
│   │   ├── d0/
│   │   ├── 87/
│   │   ├── de/
│   │   ├── af/
│   │   ├── be/
│   │   ├── 2e/
│   │   ├── 80/
│   │   ├── f7/
│   │   ├── 19/
│   │   ├── 37/
│   │   ├── ec/
│   │   ├── 12/
│   │   ├── e8/
│   │   ├── 71/
│   │   ├── info/
│   │   ├── ad/
│   │   ├── 8f/
│   │   ├── 04/
│   │   ├── 40/
│   │   ├── f3/
│   │   ├── 46/
│   │   ├── 7b/
│   │   ├── 1c/
│   │   ├── 86/
│   │   ├── 6d/
│   │   ├── 1e/
│   │   ├── f2/
│   │   ├── 31/
│   │   ├── 5b/
│   │   ├── c9/
│   │   ├── 7f/
│   │   ├── f0/
│   │   ├── c0/
│   │   ├── 65/
│   │   ├── 21/
│   │   ├── 99/
│   │   ├── 69/
│   │   ├── 5d/
│   │   ├── 54/
│   │   ├── cb/
│   │   ├── e9/
│   │   ├── 63/
│   │   ├── 67/
│   │   ├── eb/
│   │   ├── 76/
│   │   ├── 56/
│   │   ├── a0/
│   │   ├── 06/
│   │   ├── 9d/
│   │   ├── ea/
│   │   ├── 29/
│   │   ├── c2/
│   │   ├── dd/
│   │   ├── ce/
│   │   ├── 0b/
│   │   ├── b6/
│   │   ├── b7/
│   │   ├── 74/
│   │   ├── 3e/
│   │   ├── cf/
│   │   ├── 6f/
│   │   ├── 4f/
│   ├── branches/
│   ├── refs/
│   │   ├── heads/
│   │   ├── tags/
│   │   ├── remotes/
│   │   │   ├── origin/
docker/
│   ├── elasticsearch/
│   ├── │   ├── Dockerfile
│   ├── traefik/
│   ├── │   ├── Dockerfile
│   ├── logstash/
│   ├── │   ├── Dockerfile
│   ├── kibana/
│   ├── │   ├── Dockerfile
helm/
│   ├── elasticsearch/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml
│   ├── logstash/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml
│   ├── kibana/
│   ├── │   ├── values.yaml
│   ├── │   ├── Chart.yaml

=== File: cloudflare-secret.yaml ===
apiVersion: v1
# REDACTED: Sensitive content removed
metadata:
  name: cloudflare-api-token
  namespace: traefik
type: Opaque
stringData:
  CLOUDFLARE_DNS_API_TOKEN: "BLh7Yg7p3oJQ_U1k2T9zKjswLXTUgZSiud6ZYIXL"


=== File: elasticsearch-git.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - elasticsearch-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: elk-ingress-routes.yaml ===
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: elasticsearch-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`elasticsearch.1xmr.com`)
      kind: Rule
      services:
        - name: elasticsearch-master
          namespace: elk
          port: 9200
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`kibana.1xmr.com`)
      kind: Rule
      services:
        - name: kibana
          namespace: elk
          port: 5601
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: logstash-route
  namespace: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`logstash.1xmr.com`)
      kind: Rule
      services:
        - name: logstash
          namespace: elk
          port: 5044
  tls:
    certResolver: letsencrypt


=== File: logstash-git.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
spec:
  project: default
  source:
    repoURL: git@github.com:wrightpt/elk-stack-kubernetes-simplified.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - logstash-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/setup/argocd-installation.yaml ===
# argocd/setup/argocd-installation.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# This includes the core ArgoCD installation
# When applying, use: kubectl apply -f argocd-installation.yaml -n argocd


=== File: argocd/applications/logstash.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: logstash
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/metallb.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'git@github.com:wrightpt/elk-stack-kubernetes-simplified.git'
    targetRevision: main
    path: argocd/applications   # Adjust as needed
    directory:
      recurse: true             # If needed for scanning nested files
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: metallb-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true



=== File: argocd/applications/elasticsearch.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: elasticsearch
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/kibana.yaml ===
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.elastic.co
    chart: kibana
    targetRevision: 7.17.3
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true


=== File: argocd/applications/metallb-config.yaml ===
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: home-lan-pool
  namespace: metallb-system
spec:
  addresses:
    - 192.168.1.240-192.168.1.250
  # Set autoAssign to 'true' if you want MetalLB to automatically assign IPs 
  # from this pool to LoadBalancer Services.
  autoAssign: true

---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: home-lan-advert
  namespace: metallb-system
spec:
  # Name of the IPAddressPool to advertise on L2
  ipAddressPools:
    - home-lan-pool



=== File: node_modules/pump/.travis.yml ===
language: node_js
node_js:
  - "0.10"

script: "npm test"


=== File: node_modules/pump/.github/FUNDING.yml ===
github: mafintosh
tidelift: "npm/pump"


=== File: node_modules/ast-types/.github/dependabot.yml ===
# Please see the documentation for all configuration options:
# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates

version: 2
updates:
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      interval: "daily"


=== File: node_modules/ast-types/.github/workflows/main.yml ===
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['10', '12', '14']
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
        npm test


=== File: node_modules/require-directory/.travis.yml ===
language: node_js
node_js:
  - 0.10


=== File: node_modules/smart-buffer/.travis.yml ===
language: node_js
node_js:
  - 6
  - 8
  - 10
  - 12
  - stable

before_script:
  - npm install -g typescript
  - tsc -p ./

script: "npm run coveralls"

=== File: node_modules/smart-buffer/.prettierrc.yaml ===
parser: typescript
printWidth: 120
tabWidth: 2
singleQuote: true
trailingComma: none

=== File: node_modules/proxy-from-env/.travis.yml ===
language: node_js
node_js:
  - node
  - lts/*
script:
  - npm run lint
  # test-coverage will also run the tests, but does not print helpful output upon test failure.
  # So we also run the tests separately.
  - npm run test
  - npm run test-coverage && cat coverage/lcov.info | ./node_modules/.bin/coveralls && rm -rf coverage


=== File: node_modules/is-arrayish/.istanbul.yml ===
instrumentation:
  excludes:
    - test.js
    - test/**/*


=== File: node_modules/is-arrayish/.travis.yml ===
language: node_js

script:
  - node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- --compilers coffee:coffee-script/register
  - cat coverage/lcov.info | node_modules/.bin/coveralls
node_js:
  - "0.10"
  - "0.11"
  - "0.12"
  - "iojs"
os:
  - linux
  - osx

notifications:
  slack:
    secure: oOt8QGzdrPDsTMcyahtIq5Q+0U1iwfgJgFCxBLsomQ0bpIMn+y5m4viJydA2UinHPGc944HS3LMZS9iKQyv+DjTgbhUyNXqeVjtxCwRe37f5rKQlXVvdfmjHk2kln4H8DcK3r5Qd/+2hd9BeMsp2GImTrkRSud1CZQlhhe5IgZOboSoWpGVMMy1iazWT06tAtiB2LRVhmsdUaFZDWAhGZ+UAvCPf+mnBOAylIj+U0GDrofhfTi25RK0gddG2f/p2M1HCu49O6wECGWkt2hVei233DkNJyLLLJVcvmhf+aXkV5TjMyaoxh/HdcV4DrA7KvYuWmWWKsINa9hlwAsdd/FYmJ6PjRkKWas2JoQ1C+qOzDxyQvn3CaUZFKD99pdsq0rBBZujqXQKZZ/hWb/CE74BI6fKmqQkiEPaD/7uADj04FEg6HVBZaMCyauOaK5b3VC97twbALZ1qVxYV6mU+zSEvnUbpnjjvRO0fSl9ZHA+rzkW73kX3GmHY0wAozEZbSy7QLuZlQ2QtHmBLr+APaGMdL1sFF9qFfzqKy0WDbSE0WS6hpAEJpTsjYmeBrnI8UmK3m++iEgyQPvZoH9LhUT+ek7XIfHZMe04BmC6wuO24/RfpmR6bQK9VMarFCYlBiWxg/z30vkP0KTpUi3o/cqFm7/Noxc0i2LVqM3E0Sy4=


=== File: node_modules/socks/.prettierrc.yaml ===
parser: typescript
printWidth: 80
tabWidth: 2
singleQuote: true
trailingComma: all
arrowParens: always
bracketSpacing: false

=== File: node_modules/fd-slicer/.travis.yml ===
language: node_js
node_js:
  - "0.10"
script:
  - "npm run test-travis"
after_script:
  - "npm install coveralls@2 && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"


=== File: docker/elasticsearch/Dockerfile ===
FROM docker.elastic.co/elasticsearch/elasticsearch:7.17.3

# Copy custom configuration files
COPY elasticsearch.yml /usr/share/elasticsearch/config/
COPY jvm.options /usr/share/elasticsearch/config/

# Set permissions
USER root
RUN chmod 660 /usr/share/elasticsearch/config/elasticsearch.yml \
    && chmod 660 /usr/share/elasticsearch/config/jvm.options \
    && chown -R 1000:0 /usr/share/elasticsearch/config

# Switch back to elasticsearch user
USER 1000


=== File: docker/traefik/Dockerfile ===
FROM traefik:v2.9

# Copy Traefik configuration
COPY traefik.yml /etc/traefik/
COPY config.yml /etc/traefik/

# REDACTED: Sensitive content removed
RUN mkdir -p /letsencrypt


=== File: docker/logstash/Dockerfile ===
FROM docker.elastic.co/logstash/logstash:7.17.3

# Copy configuration files
COPY logstash.yml /usr/share/logstash/config/
COPY pipelines.yml /usr/share/logstash/config/
COPY jvm.options /usr/share/logstash/config/
COPY conf.d/ /usr/share/logstash/pipeline/

# Set permissions
USER root
RUN chmod 660 /usr/share/logstash/config/logstash.yml \
    && chmod 660 /usr/share/logstash/config/pipelines.yml \
    && chmod 660 /usr/share/logstash/config/jvm.options \
    && chmod -R 660 /usr/share/logstash/pipeline/ \
    && chown -R 1000:0 /usr/share/logstash/config \
    && chown -R 1000:0 /usr/share/logstash/pipeline

# Switch back to logstash user
USER 1000


=== File: docker/kibana/Dockerfile ===
FROM docker.elastic.co/kibana/kibana:7.17.3

# Copy custom configuration
COPY kibana.yml /usr/share/kibana/config/

# Set permissions
USER root
RUN chmod 660 /usr/share/kibana/config/kibana.yml \
    && chown -R 1000:0 /usr/share/kibana/config

# Switch back to kibana user
USER 1000


=== File: helm/elasticsearch/values.yaml ===
# helm/elasticsearch-values.yaml
replicas: 1  # Adjust based on your home server capacity

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "30Gi"

# Network settings
service:
  type: ClusterIP

# Security settings
securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000

# Config for ES
esConfig:
  elasticsearch.yml: |
    cluster.name: home-cluster
    discovery.type: single-node
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true


=== File: helm/elasticsearch/Chart.yaml ===
apiVersion: v2
name: elasticsearch
description: Elasticsearch Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: elasticsearch
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: helm/logstash/values.yaml ===
# helm/logstash-values.yaml
image:
  repository: "logstash"
  tag: "7.17.3"

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "2"
    memory: "4Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "10Gi"

# Network settings
service:
  type: ClusterIP
  ports:
    - name: http
      port: 5044
      protocol: TCP

# Security settings
securityContext:
  runAsUser: 1000
  fsGroup: 1000

# Logstash configuration
logstashConfig:
  logstash.yml: |
    path.data: /usr/share/logstash/data
    path.logs: /var/log/logstash
    node.name: nextjs-market-logstash
    pipeline.workers: 8
    pipeline.batch.size: 1000
    pipeline.batch.delay: 50
    queue.type: persisted
    queue.max_bytes: 3gb
    log.level: debug

  pipelines.yml: |
    - pipeline.id: main
      path.config: "/usr/share/logstash/pipeline/*.conf"

# JVM options
logstashJavaOpts: "-Xms2g -Xmx2g"

# Pipeline configuration
logstashPipeline:
  nextjs-market.conf: |
    input {
      http {
        host => "0.0.0.0"
        port => 5044
        codec => json
        
        response_headers => {
          "Content-Type" => "application/json"
          "Access-Control-Allow-Origin" => "*"
          "Access-Control-Allow-Methods" => "POST, OPTIONS"
          "Access-Control-Allow-Headers" => "Content-Type"
        }
      }
    }

    filter {
      mutate {
        add_field => {
          "received_at" => "%{@timestamp}"
          "environment" => "${ENVIRONMENT}"
          "service" => "nextjs-market"
          "log_type" => "application"
        }
# REDACTED: Sensitive content removed
      }
    }

    output {
      elasticsearch {
        hosts => ["${ES_HOSTS}"]
        user => "${ES_USER}"
# REDACTED: Sensitive content removed
        index => "nextjs-market-${ENVIRONMENT}-%{+YYYY.MM.dd}"
        ssl_verification_mode => "none"
        timeout => 120
        retry_on_conflict => 5
        retry_max_interval => 30
        retry_initial_interval => 2
      }
      
      file {
        path => "/var/log/logstash/nextjs-market-debug.log"
        codec => json_lines
        flush_interval => 60
      }
    }

# Environment variables
extraEnvs:
  - name: ES_HOSTS
    value: "https://elasticsearch-master:9200"
  - name: ES_USER
    valueFrom:
# REDACTED: Sensitive content removed
        name: logstash-credentials
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: logstash-credentials
# REDACTED: Sensitive content removed
  - name: ENVIRONMENT
    value: "production"


=== File: helm/logstash/Chart.yaml ===
apiVersion: v2
name: logstash
description: Logstash Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: logstash
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: helm/kibana/values.yaml ===
# helm/kibana-values.yaml
image:
  repository: "kibana"
  tag: "7.17.3"

elasticsearchHosts: "http://elasticsearch-master:9200"

# Resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-storage"
  size: "5Gi"

# Network settings
service:
  type: ClusterIP
  port: 5601

# Security settings
securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000

# Kibana configuration
kibanaConfig:
  kibana.yml: |
    server.host: "0.0.0.0"
    server.publicBaseUrl: "https://kibana.1xmr.com"
    elasticsearch.username: "kibana_admin"
# REDACTED: Sensitive content removed
    elasticsearch.ssl.verificationMode: none
# REDACTED: Sensitive content removed
    logging:
      appenders:
        file:
          type: file
          fileName: /var/log/kibana/kibana.log
          layout:
            type: json
      root:
        appenders:
          - default
          - file
    pid.file: /run/kibana/kibana.pid

# REDACTED: Sensitive content removed
extraEnvs:
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: kibana-credentials
# REDACTED: Sensitive content removed
# REDACTED: Sensitive content removed
    valueFrom:
# REDACTED: Sensitive content removed
        name: kibana-credentials
# REDACTED: Sensitive content removed


=== File: helm/kibana/Chart.yaml ===
apiVersion: v2
name: kibana
description: Kibana Helm chart for Kubernetes
type: application
version: 1.0.0
appVersion: 7.17.3
dependencies:
  - name: kibana
    version: 7.17.3
    repository: https://helm.elastic.co


=== File: .github/workflows/build-images.yml ===


