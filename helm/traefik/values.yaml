#elk-stack-repo/helm/traefik/values.yaml
# Service config
service:
  type: LoadBalancer
  externalIPs:
    - 192.168.1.240
  ports:
    web:
      port: 80
      protocol: TCP
      nodePort: 30080
    websecure:
      port: 443
      protocol: TCP
      nodePort: 30443

# Traefik Dashboard
dashboard:
  enabled: true

# IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true
    rule: "Host(`traefik.local`) && PathPrefix(`/dashboard`)"
    tls:
      certResolver: letsencrypt

providers:
  kubernetesCRD:
    enabled: true
  kubernetesIngress:
    enabled: true

additionalArguments:
  - "--certificatesresolvers.letsencrypt.acme.email=connect@3xmr.com"
  - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
  - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
  - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
  - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
  - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=30"
  - "--serverstransport.insecureskipverify=true"
  - "--log.level=DEBUG"

persistence:
  enabled: true
  name: traefik
  accessMode: ReadWriteOnce
  size: 128Mi
  storageClass: "local-storage"
  path: /data

env:
  - name: CF_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-token
        key: CF_API_TOKEN

# Additional resources for dynamic config
additionalResources:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: traefik-config
      namespace: traefik
    data:
      config.yml: |
        http:
          routers:
            kibana:
              rule: "Host(`kibana.1xmr.com`)"
              entryPoints:
                - websecure
              service: kibana
              tls:
                certResolver: letsencrypt
            elasticsearch:
              rule: "Host(`elasticsearch.1xmr.com`)"
              entryPoints:
                - websecure
              service: elasticsearch
              tls:
                certResolver: letsencrypt
            logstash:
              rule: "Host(`logstash.1xmr.com`)"
              entryPoints:
                - websecure
              service: logstash
              tls:
                certResolver: letsencrypt

          services:
            kibana:
              loadBalancer:
                servers:
                  - url: "http://kibana-kibana.elk:5601"
              passHostHeader: true
            elasticsearch:
              loadBalancer:
                servers:
                  - url: "http://elasticsearch-master.elk:9200"
              passHostHeader: true
            logstash:
              loadBalancer:
                servers:
                  - url: "http://logstash.elk:5044"
              passHostHeader: true
